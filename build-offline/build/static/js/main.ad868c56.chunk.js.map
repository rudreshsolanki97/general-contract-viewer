{"version":3,"sources":["assets/img/wallets/bnb.png","helpers/constant.js","redux/reducers/Wallet.js","redux/reducers/WalletBalance.js","redux/reducers/index.js","redux/store.js","middleware/networkValidator.js","actions/index.js","actions/types.js","cacheBuster.js","helpers/crypto.js","components/common/GeneralModal.js","wallets/metamask.js","components/common/BalanceModal.js","wallets/xinpay.js","components/wallet-connect/Keystore.js","components/common/common.js","components/wallet-connect/PrivateKey.js","assets/img/wallets/metamask.webp","components/wallet-connect/walletConnect.js","assets/img/brand/header-logo.png","components/Header.js","wallets/account.js","wallets/index.js","components/common/AccordionWindow.js","components/common/ObjectComponent.js","components/common/RenderCustomView.js","components/common/FunctionCard.js","components/common/AbiInput.js","components/common/Navigation.js","components/GCV/PastEvents.js","components/GCV/index.js","App.js","reportWebVitals.js","index.js","assets/img/wallets/xinpay.png"],"names":["SubPath","PROJECT_NAME","RemoveExpo","x","data","String","split","length","z","sign","str","replace","mag","Number","CONTRACT_ADDRESS","token","CONTRACT_ABI","TokenAbi","VALID_CHAINS","CHAIN_DATA","97","56","50","51","RPC_TO_NETWORK","HTTP_PROVIDER","NETWORK_ICON","binance","xinfin","WS_PROVIDER","ObjToArr","obj","Object","keys","map","key","FilterStructResp","filter","e","i","reduce","acc","IsHex","n","test","GetTimerData","seconds","days","Math","floor","hours","minutes","FormatSeconds","sec","className","AddMultiplier","amount","multiplier","pow","parseFloat","RemoveMultiplier","TIMER_FORMAT","IsJson","abi","JSON","parse","BUILD_TX_LINK","explorer","hash","retLink","endsWith","BUILD_BLOCK_LINK","DEFAULT_CHAIN_ID","DEFAULT_PROVIDER","EXPLORER","LOADERS","Xinpay","Keystore","Privatekey","MetaMask","DcentInApp","DcentBridge","NETWORK_NAME","MODE","process","initialState","connected","address","chain_id","valid_network","rpc_provider","ws_provider","loader","account","provider","reducer","wallet","state","payload","type","types","rst","chainIdInt","parseInt","balance","middlewares","applyMiddleware","ReduxThunk","ReduxLogger","store","next","action","includes","_","isUndefined","dispatch","actions","startsWith","createStore","combineReducers","Reducer","WalletConnected","Types","WalletOpened","NetworkChanged","getState","AccountChanged","WalletDisconnected","NetworkValid","SetChainData","NetworkInValid","WALLET_CONNECTED","WALLET_DISCONNECTED","WALLET_BALANCE_DATA","WALLET_ADDRESS_CHANGED","WALLET_CHAIN_CHANGED","WALLET_OPENED","NETWORK_VALID","NETWORK_INVALID","SET_CHAIN_DATA","global","appVersion","packageJson","version","CacheBuster","props","loading","isLatestVersion","refreshCacheAndReload","console","log","caches","then","names","name","delete","window","location","reload","fetch","Date","now","response","json","meta","latestVersion","versionA","versionB","versionsA","versionsB","a","shift","b","isNaN","semverGreaterThan","setState","this","children","React","Component","Xdc3","require","Accounts","utils","VerifyPrivateKey","TransferType","privateKey","GetAccountFromPK","privateKeyToAccount","GetAccountFromKeystore","keystore","pwd","toString","decrypt","GetRevertReason","tx","Promise","resolve","reject","providers","HttpProvider","eth","call","toAscii","other","slice","reason","Buffer","from","join","catch","ToggleModal","web3","btnName","btnVariant","disableSubmit","rest","useState","showModal","setShowModal","handleClose","submitBtn","Button","variant","onClick","onSubmit","btnNameSubmit","Modal","show","onHide","Header","closeButton","Title","modalName","Body","Footer","onClose","btnNameClose","BalanceModal","balances","Col","GeneralModal","centered","Container","Row","IsWeb3Supported","Boolean","ethereum","GetProvider","detectEthereumProvider","GetCurrentProvider","enable","_initListerner","Web3","getAccounts","accounts","getChainId","removeAllListeners","on","currentProvider","isMetaMask","isTrust","isStatus","SOFA","__CIPHER__","constructor","host","indexOf","xdc3","ImportFromFilerBodyComponent","fileReader","cb","defaultPath","useEffect","handleFileChosen","handleFileRead","content","result","file","FileReader","onloadend","readAsText","id","accept","onChange","target","files","setKeystore","setPwd","statusMessage","setStatusMessage","value","LOADER_BOX","RenderQR","size","PrivateKey","setPrivateKey","isEmpty","isValid","renderMessage","disabled","IsXdc3Supported","GetChainId","net","getId","initXdc3","chainId","GetNativeBalance","getBalance","SubmitContractTxGeneral","method","stateMutability","contract","Contract","params","methods","resp","estimateGas","gasLimit","send","gas","IsJsonRpcError","err","message","GetPastEvents","getPastEvents","fromBlock","toBlock","GetJsonRpcError","trim","fromXdcAddress","toXdcAddress","toLowerCase","Provider","WalletProviders","icon","MetamaskIcon","rowClass","XinPayIcon","WalletConnect","accountCallback","toast","autoClose","providerSelected","prevProps","sm","lg","md","src","alt","BTN_MSG","RenderWalletProvider","connect","curr","push","Navbar","bg","expand","to","GCVLogo","getMode","getWalletBtn","init","splice","encodeABI","walletAddress","signTransaction","signed","sendSignedTransaction","rawTransaction","once","receipt","status","GetSignedTx","nonce","gasPrice","GetFuncFromLoader","xinpay","toastId","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transactionHash","href","rel","finally","dismiss","AccordionWindow","active","defActive","faChevronDown","faChevronRight","Accordion","activeKey","Card","Toggle","as","eventKey","title","renderSymbol","Collapse","childClass","GeneralObjectViewer","_generalObjectViewer","isArray","isObject","k","child","RenderInputCustomType2","field","setInput","onBlur","formData","setFormData","inputProps","customInput","options","label","curVal","Form","Label","defaultChecked","RawTxForm","setnonce","setgasPrice","setgasLimit","setchainId","rawTx","DynamicForm","defaultValue","inputs","setInputs","setLoading","showRawTxForm","setshowRawTx","setFormDatas","v","assign","contractType","respStr","setModalContent","alert","style","width","float","copy","faCopy","RenderRawTx","FunctionCard","mutabilityClass","AbiInput","addr","setAbi","setAddress","stringify","PageNavigation","setactivePath","activePath","links","link","PastEvents","loaded","returnValues","textAlign","getEvents","sort","blockNumber","event","renderReturnValues","color","renderEvents","DEFAULT_ADDRESS","LINKS","Dashboard","modalContent","contractAbi","DEFAULT_ABI","contractAddress","openTab","bind","setContractAbi","setContractAddress","networks","cards","mutability","read","write","renderContractInput","renderFunctionalityCards","networkName","renderNetworkSwitch","renderNetworkName","renderDasboard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.ad868c56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bnb.c1ac724d.png\";","import TokenAbi from \"../abi/StorxToken.json\";\n\nimport binance from \"../assets/img/wallets/bnb.png\";\nimport xinfin from \"../assets/img/wallets/xinpay.png\";\n\nexport const SubPath = \"/\";\n\nexport const PROJECT_NAME = \"GCV\";\n\nexport const RemoveExpo = (x) => {\n  var data = String(x).split(/[eE]/);\n  if (data.length === 1) return data[0];\n\n  var z = \"\",\n    sign = x < 0 ? \"-\" : \"\",\n    str = data[0].replace(\".\", \"\"),\n    mag = Number(data[1]) + 1;\n\n  if (mag < 0) {\n    z = sign + \"0.\";\n    while (mag++) z += \"0\";\n    return z + str.replace(/^\\-/, \"\");\n  }\n  mag -= str.length;\n  while (mag--) z += \"0\";\n  return str + z;\n};\n\nexport const CONTRACT_ADDRESS = {\n  token: \"xdc5d5f074837f5d4618b3916ba74de1bf9662a3fed\",\n  // matka: \"0x7717FC488464efa40AaABB260D063d7783660C44\",\n};\n\nexport const CONTRACT_ABI = {\n  token: TokenAbi,\n  // matka: MatkaAbi,\n};\n\n/**\n * @constant VALID_CHAINS  correct chain id, in decimal\n */\nexport const VALID_CHAINS = [97, 56, 50, 51];\n\nexport const CHAIN_DATA = {\n  97: \"https://testnet.bscscan.com/\",\n  56: \"https://bscscan.com/\",\n  50: \"https://explorer.xinfin.network\",\n  51: \"https://explorer.apothem.network\",\n};\n\nexport const RPC_TO_NETWORK = {\n  \"https://data-seed-prebsc-1-s1.binance.org:8545/\": 97,\n  \"https://rpc.xinfin.network\": 50,\n  \"https://rpc.apothem.network\": 51,\n};\n\nexport const HTTP_PROVIDER = {\n  97: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n  50: \"https://rpc.xinfin.network\",\n  51: \"https://rpc.apothem.network\",\n};\n\nexport const NETWORK_ICON = {\n  97: binance,\n  50: xinfin,\n  51: xinfin,\n};\n\nexport const WS_PROVIDER = {};\n\nexport const ObjToArr = (obj) => Object.keys(obj).map((key) => obj[key]);\n\nexport const FilterStructResp = (obj) =>\n  Object.keys(obj)\n    .filter((e, i) => {\n      if (i < Object.keys(obj).length / 2) return false;\n      return true;\n    })\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nexport const IsHex = (n) => {\n  const re = /[0-9A-Fa-f]{6}/g;\n\n  if (re.test(n)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const GetTimerData = (seconds) => {\n  const days = Math.floor(seconds / 86400);\n  const hours = Math.floor((seconds % 86400) / 3600);\n  const minutes = Math.floor(((seconds % 86400) % 3600) / 60);\n  const sec = Math.floor(((seconds % 86400) % 3600) % 60);\n  return { days, hours, minutes, seconds: sec };\n};\n\nexport const FormatSeconds = (seconds) => {\n  const { days, hours, minutes, seconds: sec } = GetTimerData(seconds);\n  return (\n    <span className=\"timer\">\n      <span className=\"days\">{days}</span>:\n      <span className=\"hours\">{hours}</span>:\n      <span className=\"minutes\">{minutes}</span>::\n      <span className=\"seconds\">{sec}</span>\n    </span>\n  );\n};\n\nexport const AddMultiplier = (amount) => {\n  const multiplier = Math.pow(10, 18);\n\n  return RemoveExpo(parseFloat(amount) * multiplier);\n};\n\nexport const RemoveMultiplier = (amount) => {\n  const multiplier = Math.pow(10, 18);\n\n  return parseFloat(amount) / multiplier;\n};\n\nexport const TIMER_FORMAT = \"DD:HH:MM::SS\";\n\nexport const IsJson = (abi) => {\n  try {\n    JSON.parse(abi);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const BUILD_TX_LINK = (explorer, hash) => {\n  let retLink = `${explorer}`;\n\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\n  retLink += `tx/${hash}`;\n  return retLink;\n};\n\nexport const BUILD_BLOCK_LINK = (explorer, hash) => {\n  let retLink = `${explorer}`;\n\n  if (!retLink.endsWith(\"/\")) retLink += \"/\";\n  retLink += `block/${hash}`;\n  return retLink;\n};\n\nexport const DEFAULT_CHAIN_ID = 50;\nexport const DEFAULT_PROVIDER = HTTP_PROVIDER[VALID_CHAINS[2]];\n\nexport const EXPLORER = CHAIN_DATA[DEFAULT_CHAIN_ID];\n\nexport const LOADERS = {\n  Xinpay: \"xinpay\",\n  Keystore: \"keystore\",\n  Privatekey: \"privatekey\",\n  MetaMask: \"metamask\",\n  DcentInApp: \"dcent-inapp\",\n  DcentBridge: \"dcent-bridge\",\n};\n\nexport const NETWORK_NAME = {\n  50: \"XinFin Mainnet\",\n  51: \"XinFin Apothem\",\n  97: \"BSC Testnet\",\n  56: \"BSC Mainnet\",\n};\n\nexport const MODE = process.env.REACT_APP_MODE || \"\";\n","import * as types from \"../../actions/types\";\nimport {\n  CHAIN_DATA,\n  IsHex,\n  DEFAULT_PROVIDER,\n  HTTP_PROVIDER,\n  DEFAULT_CHAIN_ID,\n} from \"../../helpers/constant\";\n\nconst initialState = {\n  connected: false,\n  address: \"\",\n  chain_id: DEFAULT_CHAIN_ID,\n  valid_network: false,\n  explorer: \"\",\n  rpc_provider: \"\",\n  ws_provider: \"\",\n  loader: \"\",\n  account: null,\n  provider: DEFAULT_PROVIDER,\n};\n\nconst WalletReducer = (state = initialState, payload) => {\n  switch (payload.type) {\n    case types.WALLET_CONNECTED: {\n      const { address, chain_id, loader, ...rst } = payload.payload;\n      let chainIdInt = chain_id;\n      if (IsHex(chain_id)) {\n        chainIdInt = parseInt(chain_id, 16);\n      }\n      return {\n        ...state,\n        connected: true,\n        address: address,\n        chain_id: chain_id,\n        explorer: CHAIN_DATA[`${chainIdInt}`],\n        loader,\n        provider: HTTP_PROVIDER[chainIdInt],\n        ...rst,\n      };\n    }\n\n    case types.WALLET_DISCONNECTED: {\n      return { ...state, connected: false };\n    }\n\n    case types.WALLET_ADDRESS_CHANGED: {\n      const { address } = payload.payload;\n      return {\n        ...state,\n        address: address,\n      };\n    }\n\n    case types.WALLET_CHAIN_CHANGED: {\n      const { chain_id } = payload.payload;\n\n      let chainIdInt = chain_id;\n      if (IsHex(chain_id)) {\n        chainIdInt = parseInt(chain_id, 16);\n      }\n\n      return {\n        ...state,\n        chain_id: chain_id,\n        explorer: CHAIN_DATA[`${chainIdInt}`],\n        provider: HTTP_PROVIDER[chainIdInt],\n      };\n    }\n\n    case types.NETWORK_VALID: {\n      return {\n        ...state,\n        valid_network: true,\n      };\n    }\n\n    case types.NETWORK_INVALID: {\n      return {\n        ...state,\n        valid_network: false,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default WalletReducer;\n","import * as types from \"../../actions/types\";\n\nconst initialState = {};\n\nconst WalletBalance = (state = initialState, payload) => {\n  switch (payload.type) {\n    case types.WALLET_BALANCE_DATA: {\n      return { ...state, ...payload.payload };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default WalletBalance;\n","import Wallet from \"./Wallet\";\nimport WalletBalance from \"./WalletBalance\";\n\nconst reducer = {\n  wallet: Wallet,\n  balance: WalletBalance,\n};\n\nexport default reducer;\n","import { applyMiddleware, createStore, combineReducers } from \"redux\";\n\nimport ReduxThunk from \"redux-thunk\";\nimport ReduxLogger from \"redux-logger\";\n\nimport Reducer from \"./reducers\";\n// import { GetWalletBalance } from \"../middleware/getWalletDetails\";\nimport { NetworkValidation } from \"../middleware/networkValidator\";\n\nconst middlewares = applyMiddleware(\n  ReduxThunk,\n  ReduxLogger,\n  NetworkValidation\n);\n\nconst configureStore = () =>\n  createStore(combineReducers({ ...Reducer }), {}, middlewares);\n\nconst store = configureStore();\n\nexport default store;\n","import _ from \"lodash\";\n\nimport * as types from \"../actions/types\";\nimport * as actions from \"../actions\";\nimport { IsHex, VALID_CHAINS } from \"../helpers/constant\";\n\nexport const NetworkValidation = (store) => (next) => (action) => {\n  if (\n    [\n      types.WALLET_CONNECTED,\n      types.WALLET_CHAIN_CHANGED,\n      types.WALLET_ADDRESS_CHANGED,\n    ].includes(action.type)\n  ) {\n    const { address } = action.payload;\n    if (_.isUndefined(address)) store.dispatch(actions.WalletDisconnected());\n    else {\n      let { chain_id } = action.payload;\n      if (!_.isUndefined(chain_id)) {\n        if (String(chain_id).startsWith(\"0x\") && IsHex(chain_id))\n          chain_id = parseInt(chain_id, 16);\n        chain_id = parseInt(chain_id);\n        if (VALID_CHAINS.includes(chain_id))\n          store.dispatch(actions.NetworkValid());\n        else store.dispatch(actions.NetworkInValid());\n      }\n    }\n  }\n  next(action);\n};\n","import { CHAIN_DATA } from \"../helpers/constant\";\nimport store from \"../redux/store\";\nimport * as Types from \"./types\";\n\nexport const WalletConnected = ({ address, chain_id, loader, ...rst }) => {\n  return {\n    type: Types.WALLET_CONNECTED,\n    payload: { address, chain_id, loader, ...rst },\n  };\n};\n\nexport const WalletOpened = () => {\n  return {\n    type: Types.WALLET_OPENED,\n  };\n};\n\nexport const NetworkChanged = (chain_id) => {\n  const state = store.getState();\n  return {\n    type: Types.WALLET_CHAIN_CHANGED,\n    payload: { chain_id, address: state.wallet.address },\n  };\n};\n\nexport const AccountChanged = (address) => {\n  return {\n    type: Types.WALLET_ADDRESS_CHANGED,\n    payload: { address },\n  };\n};\n\nexport const WalletDisconnected = () => {\n  return {\n    type: Types.WALLET_DISCONNECTED,\n  };\n};\n\nexport const NetworkValid = () => {\n  return {\n    type: Types.NETWORK_VALID,\n  };\n};\n\nexport const SetChainData = (chain_id) => {\n  return {\n    type: Types.SET_CHAIN_DATA,\n    payload: CHAIN_DATA[`${chain_id}`],\n  };\n};\n\nexport const NetworkInValid = () => {\n  return {\n    type: Types.NETWORK_INVALID,\n  };\n};\n","export const WALLET_CONNECTED = \"WALLET_CONNECTED\";\nexport const WALLET_DISCONNECTED = \"WALLET_DISCONNECTED\";\nexport const WALLET_BALANCE_DATA = \"WALLET_BALANCE_DATA\";\nexport const WALLET_ADDRESS_CHANGED = \"WALLET_ADDRESS_CHANGED\";\nexport const WALLET_CHAIN_CHANGED = \"WALLET_CHAIN_CHANGED\";\nexport const WALLET_OPENED = \"WALLET_OPENED\";\n\nexport const NETWORK_VALID = \"NETWORK_VALID\";\nexport const NETWORK_INVALID = \"NETWORK_INVALID\";\n\nexport const SET_CHAIN_DATA = \"SET_CHAIN_DATA\";\n","import React from \"react\";\n\n/* CacheBuster component */\nimport packageJson from \"../package.json\";\nglobal.appVersion = packageJson.version;\n\nconst semverGreaterThan = (versionA, versionB) => {\n  const versionsA = versionA.split(/\\./g);\n\n  const versionsB = versionB.split(/\\./g);\n  while (versionsA.length || versionsB.length) {\n    const a = Number(versionsA.shift());\n\n    const b = Number(versionsB.shift());\n    // eslint-disable-next-line no-continue\n    if (a === b) continue;\n    // eslint-disable-next-line no-restricted-globals\n    return a > b || isNaN(b);\n  }\n  return false;\n};\n\nexport default class CacheBuster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isLatestVersion: false,\n      refreshCacheAndReload: () => {\n        console.log(\"Clearing cache and hard reloading...\");\n        if (caches) {\n          // Service worker cache should be cleared with caches.delete()\n          caches.keys().then(function(names) {\n            for (let name of names) caches.delete(name);\n          });\n        }\n        // delete browser cache and hard reload\n        window.location.reload(true);\n      },\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/meta.json?v=${Date.now()}`)\n      .then((response) => response.json())\n      .then((meta) => {\n        const latestVersion = meta.version;\n        const currentVersion = global.appVersion;\n\n        const shouldForceRefresh = semverGreaterThan(\n          latestVersion,\n          currentVersion\n        );\n        if (shouldForceRefresh) {\n          console.log(\n            `We have a new version - ${latestVersion}. Should force refresh`\n          );\n          this.setState({ loading: false, isLatestVersion: false });\n        } else {\n          console.log(\n            `You already have the latest version - ${latestVersion}. No cache refresh needed.`\n          );\n          this.setState({ loading: false, isLatestVersion: true });\n        }\n      });\n  }\n\n  render() {\n    const { loading, isLatestVersion, refreshCacheAndReload } = this.state;\n    return this.props.children({\n      loading,\n      isLatestVersion,\n      refreshCacheAndReload,\n    });\n  }\n}\n","import store from \"../redux/store\";\n\nconst Xdc3 = require(\"xdc3\");\nconst Accounts = require(\"xdc3-eth-accounts\");\nconst { utils } = Xdc3;\nconst { TransferType, DEFAULT_PROVIDER } = require(\"./constant\");\n\n/**\n * \n * \n * Private key                                                         Address\n503f38a9c967ed597e47fe25643985f032b072db8075426a92110f82df48dfcb    0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\n7e5bfb82febc4c2c8529167104271ceec190eafdca277314912eaabdb67c6e5f    0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\ncc6d63f85de8fef05446ebdd3c537c72152d0fc437fd7aa62b3019b79bd1fdd4    0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\n638b5c6c8c5903b15f0d3bf5d3f175c64e6e98a10bdb9768a2003bf773dcb86a    0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB\nf49bf239b6e554fdd08694fde6c67dac4d01c04e0dda5ee11abee478983f3bc0    0x617F2E2fD72FD9D5503197092aC168c91465E7f2\nadeee250542d3790253046eee928d8058fd544294a5219bea152d1badbada395    0x17F6AD8Ef982297579C203069C1DbfFE4348c372\n097ffe12069dcb3c3d99e6771e2cbf491a9b8b2f93ff4d3468f550c5e8264755    0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678\n5f58e8b9f1867ef00578b6f03e159428ab168f776aa445bc3ecdb02c7db8e865    0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7\n290e721ac87c7b3f31bef7b70104b9280ed3fa1425a59451490c9c02bf50d08f    0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C\n27efe944ff128cf510ab447b529eec28772f13bf65ebf1cbd504192c4f26e9d8    0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC\n3cd7232cd6f3fc66a57a6bedc1a8ed6c228fff0a327e169c2bcc5e869ed49511    0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c\n2ac6c190b09897cd8987869cc7b918cfea07ee82038d492abce033c75c1b1d0c    0x14723A09ACff6D2A60DcdF7aA4AFf308FDDC160C\ndae9801649ba2d95a21e688b56f77905e5667c44ce868ec83f82e838712a2c7a    0x4B0897b0513fdC7C541B6d9D7E929C4e5364D2dB\nd74aa6d18aa79a05f3473dd030a97d3305737cbc8337d940344345c1f6b72eea    0x583031D1113aD414F02576BD6afaBfb302140225\n71975fbf7fe448e004ac7ae54cad0a383c3906055a65468714156a07385e96ce    0xdD870fA1b7C4700F2BD7f44238821C26f7392148\n * \n * \n */\n\nconst generateStub = (type, params) => {\n  switch (type) {\n    case TransferType.token:\n      return {\n        params: [params.to, params.amount, params.token],\n      };\n    case TransferType.native:\n    default:\n      return {\n        params: [params.to, params.amount],\n      };\n  }\n};\n\nexport const Computehash = ({\n  nonce,\n  transferType = TransferType.native,\n  ...params\n}) => {\n  const stub = generateStub(transferType, params);\n  const hash = utils.soliditySha3(...stub.params, nonce).toString(\"hex\");\n  return hash;\n};\n\nexport const Sign = (privateKey, msg) => {\n  try {\n    return new Accounts().sign(msg, privateKey);\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const VerifyPrivateKey = (privateKey) => {\n  if (privateKey.startsWith(\"0x\")) privateKey = privateKey.replace(\"0x\", \"\");\n  return /^[0-9a-fA-F]{64}$/.test(privateKey);\n};\n\nexport const GetAccountFromPK = (privateKey) => {\n  try {\n    if (!privateKey.startsWith(\"0x\")) privateKey = \"0x\" + privateKey;\n    return new Accounts().privateKeyToAccount(privateKey);\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const GetAccountFromKeystore = (keystore, pwd) => {\n  try {\n    if (typeof keystore !== \"string\") keystore = keystore.toString();\n    return new Accounts().decrypt(keystore, pwd);\n  } catch (e) {\n    console.log(e);\n    return null;\n  }\n};\n\nexport const IsValidAddress = (address) => {\n  return utils.isAddress(address);\n};\n\nexport const GetRevertReason = (tx) => {\n  const data = store.getState();\n  return new Promise((resolve, reject) => {\n    const xdc3 = new Xdc3(\n      new Xdc3.providers.HttpProvider(data.wallet.provider)\n    );\n    xdc3.eth\n      .call(tx)\n      .then((x) => {\n        console.log(\"x\", x, utils.toAscii(x));\n        const other = x.replace(\"0x\", \"\").slice(8);\n        const buf = Buffer.from(other, \"hex\");\n        const reason = buf\n          .toString()\n          .split(\"\")\n          .filter((x) => /^[a-zA-Z\\d\\s:]+$/i.test(x))\n          .join(\"\");\n        console.log(reason);\n        resolve(reason);\n      })\n      .catch(reject);\n  });\n};\n","import React, { useState } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ToggleModal({\n  children,\n  btnName = \"View\",\n  btnVariant = \"info\",\n  disableSubmit = false,\n  ...rest\n}) {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const submitBtn = (\n    <Button\n      variant=\"primary\"\n      onClick={() => {\n        if (rest.onSubmit && typeof rest.onSubmit === \"function\") {\n          rest.onSubmit();\n        }\n      }}\n    >\n      {rest.btnNameSubmit || \"Understood\"}\n    </Button>\n  );\n\n  return (\n    <>\n      <Button variant={btnVariant} onClick={handleShow}>\n        {btnName}\n      </Button>\n      <Modal className=\"custom-modal\" {...rest} show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{rest.modalName}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              handleClose();\n              if (rest.onClose && typeof rest.onClose === \"function\") {\n                rest.onClose();\n              }\n            }}\n          >\n            {rest.btnNameClose || \"Close\"}\n          </Button>\n          {disableSubmit === true ? \"\" : submitBtn}\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default ToggleModal;\n","import Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport {\n  CONTRACT_ABI,\n  CONTRACT_ADDRESS,\n  AddMultiplier,\n  LOADERS,\n} from \"../helpers/constant\";\n\nimport * as actions from \"../actions\";\nimport store from \"../redux/store\";\n\nlet addresses, web3;\n\nexport function IsWeb3Supported() {\n  return Boolean(window.ethereum);\n}\n\nexport async function GetProvider() {\n  const provider = await detectEthereumProvider();\n  return provider;\n}\n\nexport async function GetChainId() {\n  return await web3.eth.net.getId();\n}\n\nexport async function initWeb3() {\n  try {\n    const isWeb3Supported = IsWeb3Supported();\n    if (!isWeb3Supported) return store.dispatch(actions.WalletDisconnected());\n    if (GetCurrentProvider() !== \"metamask\")\n      return store.dispatch(actions.WalletDisconnected());\n    // const isConnected = await window.ethereum.isConnected();\n    await window.ethereum.enable();\n    _initListerner();\n    web3 = new Web3(await GetProvider());\n    const accounts = await web3.eth.getAccounts();\n    addresses = accounts;\n    const chain_id = await web3.eth.getChainId();\n    return store.dispatch(\n      actions.WalletConnected({\n        address: accounts[0],\n        chain_id,\n        loader: LOADERS.MetaMask,\n      })\n    );\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function _initListerner() {\n  window.ethereum.removeAllListeners();\n\n  window.ethereum.on(\"accountsChanged\", async (data) => {\n    const accounts = await web3.eth.getAccounts();\n    addresses = accounts;\n    store.dispatch(actions.AccountChanged(accounts[0]));\n  });\n\n  window.ethereum.on(\"chainChanged\", async (data) => {\n    const chain_id = await web3.eth.getChainId();\n    store.dispatch(actions.NetworkChanged(chain_id));\n  });\n\n  window.ethereum.on(\"connect\", async (data) => {\n    web3 = new Web3(await GetProvider());\n    const accounts = await web3.eth.getAccounts();\n    const chain_id = await web3.eth.getChainId();\n    addresses = accounts;\n    return store.dispatch(\n      actions.WalletConnected({ address: accounts[0], chain_id })\n    );\n  });\n\n  window.ethereum.on(\"disconnect\", (data) => {\n    console.log(\"disconnect\", data);\n    return store.dispatch(actions.WalletDisconnected());\n  });\n\n  window.ethereum.on(\"message\", (data) => {\n    console.log(\"message\", data);\n  });\n}\n\nexport function GetCurrentProvider() {\n  if (IsWeb3Supported() !== true) return null;\n\n  if (window.web3.currentProvider.isMetaMask) return \"metamask\";\n\n  if (window.web3.currentProvider.isTrust) return \"trust\";\n\n  if (window.web3.currentProvider.isStatus) return \"status\";\n\n  if (typeof window.SOFA !== \"undefined\") return \"coinbase\";\n\n  if (typeof window.__CIPHER__ !== \"undefined\") return \"cipher\";\n\n  if (window.web3.currentProvider.constructor.name === \"EthereumProvider\")\n    return \"mist\";\n\n  if (window.web3.currentProvider.constructor.name === \"Web3FrameProvider\")\n    return \"parity\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"infura\") !== -1\n  )\n    return \"infura\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"localhost\") !== -1\n  )\n    return \"localhost\";\n\n  return \"unknown\";\n}\n\nexport const GetNativeBalance = async (address) => {\n  const web3 = new Web3(await GetProvider());\n  return web3.eth.getBalance(address);\n};\n\nexport async function SubmitContractTxGeneral(\n  method,\n  type,\n  stateMutability,\n  abi,\n  address,\n  ...params\n) {\n  try {\n    const provider = store.getState().wallet.provider;\n    const web3 = new Web3(provider);\n\n    // const { address, abi } = getContractAddress(type);\n\n    const contract = new web3.eth.Contract(abi, address);\n\n    if (stateMutability === \"view\") {\n      const resp = await contract.methods[method](...params).call();\n\n      return resp;\n    } else {\n      const gasLimit = await contract.methods[method](...params).estimateGas({\n        from: addresses[0],\n      });\n      const resp = await contract.methods[method](...params).send({\n        from: addresses[0],\n        gas: gasLimit,\n      });\n\n      return resp;\n    }\n  } catch (e) {\n    console.log(\"resp\", IsJsonRpcError(e));\n    console.log(\"resp\", e);\n    throw e;\n  }\n}\n\nexport const GetPastEvents = async (abi, address) => {\n  const web3 = new Web3(await GetProvider());\n  const contract = new web3.eth.Contract(abi, address);\n  return await contract.getPastEvents(\n    \"allEvents\",\n    {\n      fromBlock: 0,\n      toBlock: \"latest\",\n    },\n    function (error, events) {\n      console.log(\"eventsevents\", events);\n    }\n  );\n};\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nexport const GetJsonRpcError = (err) => {\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\n};\n\nfunction getContractAddress(type) {\n  return {\n    address: CONTRACT_ADDRESS[type],\n    abi: CONTRACT_ABI[type],\n  };\n}\n\nexport const GetSignedTx = async (\n  abi,\n  address,\n  method,\n  { nonce, gasLimit, gasPrice, chainId },\n  ...params\n) => {\n  const state = store.getState();\n  const provider = state.wallet.provider;\n  const web3 = new Web3(new Web3.providers.HttpProvider(provider));\n  const contract = new web3.eth.Contract(abi, address);\n  const data = contract.methods[method](...params).encodeABI();\n  const tx = {\n    to: address,\n    nonce: nonce,\n    gasPrice: gasPrice,\n    gas: gasLimit,\n    data: data,\n    chainId,\n  };\n  const signed = await web3.eth.signTransaction(\n    tx,\n    state.wallet.address\n  );\n  return signed.raw;\n};\n","import { Col, Container, Row } from \"react-bootstrap\";\nimport { PROJECT_NAME } from \"../../helpers/constant\";\nimport GeneralModal from \"./GeneralModal\";\n\nconst BalanceModal = ({ data = [] }) => {\n  const balances = data.map(({ name, balance }) => (\n    <Col className=\"balance-item\">\n      <div className=\"balance-item__name\">{name}</div>\n      <div className=\"balance-item__value\">{balance}</div>\n    </Col>\n  ));\n\n  return (\n    <GeneralModal\n      centered=\"true\"\n      btnVariant=\"warning\"\n      btnName=\"MY WALLET\"\n      disableSubmit={true}\n      modalName={`${PROJECT_NAME} Wallet`}\n      className=\"balance-modal\"\n    >\n      <div>\n        <Container>\n          <Row>{balances}</Row>\n        </Container>\n      </div>\n    </GeneralModal>\n  );\n};\n\nexport default BalanceModal;\n","import Xdc3, { utils } from \"xdc3\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport * as actions from \"../actions\";\nimport store from \"../redux/store\";\nimport { LOADERS } from \"../helpers/constant\";\nimport { GetRevertReason } from \"../helpers/crypto\";\n\nlet addresses, xdc3;\n\nexport function IsXdc3Supported() {\n  return Boolean(window.ethereum);\n}\n\nexport async function GetProvider() {\n  const provider = await detectEthereumProvider();\n  return provider;\n}\n\nexport async function GetChainId() {\n  let xdc3 = new Xdc3(await GetProvider());\n  return await xdc3.eth.net.getId();\n}\n\nexport async function initXdc3() {\n  try {\n    const isXdc3Supported = IsXdc3Supported();\n    if (!isXdc3Supported) return store.dispatch(actions.WalletDisconnected());\n    if ((await GetCurrentProvider()) !== \"xinpay\")\n      return store.dispatch(actions.WalletDisconnected());\n    // const isConnected = await window.ethereum.isConnected();\n    await window.ethereum.enable();\n    _initListerner();\n    const provider = await GetProvider();\n    xdc3 = new Xdc3(provider);\n    const accounts = await xdc3.eth.getAccounts();\n    addresses = accounts;\n    const chain_id = await xdc3.eth.getChainId();\n    return store.dispatch(\n      actions.WalletConnected({ address: accounts[0], chain_id })\n    );\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function _initListerner() {\n  window.ethereum.removeAllListeners();\n\n  window.ethereum.on(\"accountsChanged\", async (data) => {\n    const accounts = await xdc3.eth.getAccounts();\n    addresses = accounts;\n    store.dispatch(actions.AccountChanged(accounts[0]));\n  });\n\n  window.ethereum.on(\"chainChanged\", async (data) => {\n    const chain_id = await xdc3.eth.getChainId();\n    store.dispatch(actions.NetworkChanged(chain_id));\n  });\n\n  window.ethereum.on(\"connect\", async (data) => {\n    xdc3 = new Xdc3(await GetProvider());\n    const accounts = await xdc3.eth.getAccounts();\n    const chain_id = await xdc3.eth.getChainId();\n    addresses = accounts;\n    return store.dispatch(\n      actions.WalletConnected({\n        address: accounts[0],\n        chain_id,\n        loader: LOADERS.Xinpay,\n      })\n    );\n  });\n\n  window.ethereum.on(\"disconnect\", (data) => {\n    console.log(\"disconnect\", data);\n    return store.dispatch(actions.WalletDisconnected());\n  });\n\n  window.ethereum.on(\"message\", (data) => {\n    console.log(\"message\", data);\n  });\n}\n\nexport async function GetCurrentProvider() {\n  if (IsXdc3Supported() !== true) return null;\n\n  if (window.web3.currentProvider.isMetaMask) {\n    const chainId = await GetChainId();\n    console.log(\"chainId\", chainId, [50, 51].includes(chainId));\n    if ([50, 51].includes(chainId)) return \"xinpay\";\n    return \"metamask\";\n  }\n\n  if (window.web3.currentProvider.isTrust) return \"trust\";\n\n  if (window.web3.currentProvider.isStatus) return \"status\";\n\n  if (typeof window.SOFA !== \"undefined\") return \"coinbase\";\n\n  if (typeof window.__CIPHER__ !== \"undefined\") return \"cipher\";\n\n  if (window.web3.currentProvider.constructor.name === \"EthereumProvider\")\n    return \"mist\";\n\n  if (window.web3.currentProvider.constructor.name === \"Xdc3FrameProvider\")\n    return \"parity\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"infura\") !== -1\n  )\n    return \"infura\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"localhost\") !== -1\n  )\n    return \"localhost\";\n\n  return \"unknown\";\n}\n\nexport const GetNativeBalance = (address) => {\n  const xdc3 = new Xdc3(window.web3.currentProvider);\n  return xdc3.eth.getBalance(address);\n};\n\nexport async function SubmitContractTxGeneral(\n  method,\n  type,\n  stateMutability,\n  abi,\n  address,\n  ...params\n) {\n  try {\n    const state = store.getState();\n    const xdc3 = new Xdc3(await GetProvider());\n\n    // const { address, abi } = getContractAddress(type);\n\n    const contract = new xdc3.eth.Contract(abi, address);\n\n    if (stateMutability === \"view\") {\n      const resp = await contract.methods[method](...params).call();\n\n      return resp;\n    } else {\n      const gasLimit = await contract.methods[method](...params).estimateGas({\n        from: state.wallet.address,\n      });\n      const resp = await contract.methods[method](...params).send({\n        from: state.wallet.address,\n        gas: gasLimit,\n      });\n\n      return resp;\n    }\n  } catch (e) {\n    console.log(\"resp\", IsJsonRpcError(e));\n    console.log(\"resp\", e);\n    throw e;\n  }\n}\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nexport const GetPastEvents = async (abi, address) => {\n  const xdc3 = new Xdc3(await GetProvider());\n  const contract = new xdc3.eth.Contract(abi, address);\n  return await contract.getPastEvents(\"allEvents\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n};\n\nexport const GetJsonRpcError = (err) => {\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\n};\n\nexport function fromXdcAddress(address) {\n  return utils.fromXdcAddress(address);\n}\n\nexport function toXdcAddress(address) {\n  return utils.toXdcAddress(address).toLowerCase();\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nimport { GetAccountFromKeystore } from \"../../helpers/crypto\";\n\nconst ImportFromFilerBodyComponent = ({ cb, defaultPath }) => {\n  let fileReader;\n\n  useEffect(() => {\n    if (defaultPath) {\n      handleFileChosen(defaultPath);\n    }\n  });\n\n  const handleFileRead = () => {\n    const content = fileReader.result;\n    cb(content);\n  };\n\n  const handleFileChosen = (file) => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleFileRead;\n    fileReader.readAsText(file);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"file\"\n        id=\"input-file\"\n        accept=\".json\"\n        onChange={(e) => handleFileChosen(e.target.files[0])}\n      />\n    </div>\n  );\n};\n\nconst Keystore = ({ cb }) => {\n  const [keystore, setKeystore] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  // const [loading, setLoading] = useState(false);\n\n  let btnName = \"Submit\";\n\n  // if (loading) {\n  //   btnName = LOADER_BOX;\n  // }\n\n  return (\n    <div className=\"keystore\">\n      <Container>\n        <Row>\n          <ImportFromFilerBodyComponent\n            className=\"keystore-path__input\"\n            cb={setKeystore}\n          />\n        </Row>\n\n        <Row>\n          <input\n            className=\"keystore-pwd__input\"\n            value={pwd}\n            type=\"password\"\n            onChange={(x) => setPwd(x.target.value)}\n          />\n        </Row>\n\n        <Row>\n          <div className=\"private-key__message\">{statusMessage}</div>\n        </Row>\n\n        <Row>\n          <Col>\n            <Button\n              className=\"u-float-r\"\n              onClick={(e) => {\n                const account = GetAccountFromKeystore(keystore, pwd);\n                if (account === null) {\n                  setStatusMessage(\"Invalid Password / Keystore\");\n                } else {\n                  setStatusMessage(\"Successfully got the account\");\n                }\n                cb(account);\n              }}\n            >\n              {btnName}\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Keystore;\n","import QRCode from \"qrcode.react\";\n\nexport const LOADER_BOX = (\n  <div className=\"box\">\n    <div className=\"loader-box\"></div>\n  </div>\n);\n\nexport const SwitchStyle2 = {\n  onColor: \"#86d3ff\",\n  onHandleColor: \"#2693e6\",\n  handleDiameter: 10,\n  uncheckedIcon: false,\n  checkedIcon: false,\n  boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n  activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n  height: 8,\n  width: 20,\n};\n\nexport const RenderQR = (value, size=128) => {\n  return <QRCode size={size} value={value} />;\n};\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\n\nimport { Container, Row, Button, Col } from \"react-bootstrap\";\n\nimport { GetAccountFromPK, VerifyPrivateKey } from \"../../helpers/crypto\";\nimport { LOADER_BOX } from \"../common/common\";\n\nconst PrivateKey = ({ cb, loading }) => {\n  const [privateKey, setPrivateKey] = useState(\"\");\n\n  function renderMessage() {\n    if (_.isEmpty(privateKey))\n      return <div className=\"no-key\">Enter Private Key</div>;\n    const isValid = VerifyPrivateKey(privateKey);\n    if (isValid)\n      return <div className=\"valid-private-key\">Private Key is valid</div>;\n    else if (isValid === false)\n      return <div className=\"invalid-private-key\">Invalid Private Key</div>;\n  }\n\n  let btnName = \"Submit\";\n\n  if (loading) {\n    btnName = LOADER_BOX;\n  }\n\n  return (\n    <div className=\"private-key\">\n      <Container>\n        <Row>\n          <input\n            className=\"private-key__input\"\n            value={privateKey}\n            onChange={(x) => setPrivateKey(x.target.value)}\n          />\n        </Row>\n\n        <Row>\n          <div className=\"private-key__message\">{renderMessage()}</div>\n        </Row>\n\n        <Row>\n          <Col>\n            <Button\n              className=\"u-float-r\"\n              onClick={() => {\n                const account = GetAccountFromPK(privateKey);\n                cb(account);\n              }}\n              disabled={loading}\n            >\n              {btnName}\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PrivateKey;\n","export default __webpack_public_path__ + \"static/media/metamask.9c1955e9.webp\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\n\nimport Keystore from \"./Keystore\";\nimport PrivateKey from \"./PrivateKey\";\n\nimport { PROJECT_NAME, DEFAULT_CHAIN_ID, MODE } from \"../../helpers/constant\";\nimport { initXdc3 } from \"../../wallets/xinpay\";\nimport { initWeb3 } from \"../../wallets/metamask\";\n\nimport * as actions from \"../../actions\";\n\nimport MetamaskIcon from \"../../assets/img/wallets/metamask.webp\";\nimport XinPayIcon from \"../../assets/img/wallets/xinpay.png\";\n// import DCent from \"../../assets/img/wallets/dcent.png\";\n\nimport { toast } from \"react-toastify\";\n// import { initDcent } from \"../../wallets/dcentInAppBrowser\";\n\nconst Provider = {\n  menu: \"menu\",\n  keystore: \"keystore\",\n  privateKey: \"privatekey\",\n};\n\nconst WalletProviders = [\n  {\n    name: \"metamask\",\n    icon: MetamaskIcon,\n    provider: initWeb3,\n    rowClass: MODE === \"offline\" ? \"disabled\" : \"\",\n  },\n  {\n    type: \"menu\",\n    name: \"xinpay\",\n    icon: XinPayIcon,\n    provider: initXdc3,\n    rowClass: MODE === \"offline\" ? \"disabled\" : \"\",\n  },\n  {\n    type: \"privatekey\",\n    name: \"privatekey\",\n    icon: XinPayIcon,\n    provider: () => {},\n    rowClass: \"\",\n  },\n  {\n    type: \"keystore\",\n    name: \"keystore\",\n    icon: XinPayIcon,\n    provider: () => {},\n    rowClass: \"\",\n  },\n  // {\n  //   type: \"menu\",\n  //   name: \"Dcent ( coming soon )\",\n  //   icon: DCent,\n  //   provider: initDcent,\n  //   rowClass: \"disabled\",\n  // },\n];\n\nclass WalletConnect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      providerSelected: Provider.menu,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.wallet.connected !== this.props.wallet.connected &&\n      this.props.wallet.connected\n    ) {\n      this.setState({ showModal: false }, () => {\n        toast(\"Wallet Connected\", { autoClose: 2000 });\n      });\n    }\n  }\n\n  accountCallback = (loader) => (account) => {\n    if (account === null)\n      toast(\"error while loading wallet\", { autoClose: 2000, type: \"error\" });\n    else {\n      this.props.WalletConnected({\n        account,\n        chain_id: this.props.wallet.chain_id,\n        address: account.address,\n        loader,\n      });\n      this.setState({ showModal: false, providerSelected: Provider.menu });\n    }\n  };\n\n  RenderWalletProvider() {\n    if (this.state.providerSelected === Provider.menu)\n      return (\n        <Container>\n          <Row>\n            {WalletProviders.map(({ name, icon, provider, type, rowClass }) => (\n              <Col sm={12}>\n                <Container>\n                  <Row\n                    className={rowClass}\n                    onClick={async () => {\n                      await provider();\n                      if (this.state.providerSelected !== type)\n                        this.setState({ providerSelected: type });\n                    }}\n                  >\n                    <Col className=\"wallet-icon--wrapper\" sm={2} lg={2} md={2}>\n                      <div className=\"wallet-icon\">\n                        <img src={icon} alt={\"logo\"} />\n                      </div>\n                    </Col>\n                    <Col\n                      className=\"wallet-name-wrapper\"\n                      sm={10}\n                      lg={10}\n                      md={10}\n                    >\n                      <div className=\"wallet-name\">{name}</div>\n                    </Col>\n                  </Row>\n                </Container>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      );\n\n    if (this.state.providerSelected === Provider.keystore)\n      return (\n        <Container>\n          <Row>\n            <Keystore cb={this.accountCallback(Provider.keystore)} />\n          </Row>\n          <Row>\n            <Button\n              onClick={() => {\n                this.setState({ providerSelected: Provider.menu });\n              }}\n            >\n              Back\n            </Button>\n          </Row>\n        </Container>\n      );\n\n    if (this.state.providerSelected === Provider.privateKey)\n      return (\n        <Container>\n          <Row>\n            <PrivateKey cb={this.accountCallback(Provider.privateKey)} />\n          </Row>\n          <Row>\n            <Button\n              onClick={() => {\n                this.setState({ providerSelected: Provider.menu });\n              }}\n            >\n              Back\n            </Button>\n          </Row>\n        </Container>\n      );\n  }\n\n  render() {\n    const BTN_MSG = this.props.btnName || \"CONNECT\";\n    const disabled = this.props.disabled || false;\n\n    return (\n      <div className=\"wallet-connect\">\n        <Button\n          variant={this.props.variant || \"primary\"}\n          onClick={() => this.setState({ showModal: true })}\n          disabled={disabled}\n        >\n          {BTN_MSG}\n        </Button>\n        <Modal\n          className=\"wallet-connect\"\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>{PROJECT_NAME}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.RenderWalletProvider()}</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.setState({ showModal: false })}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet }) {\n  return { wallet };\n}\n\nexport default connect(mapStateToProps, actions)(WalletConnect);\n","export default __webpack_public_path__ + \"static/media/header-logo.bf79f3d6.png\";","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { Navbar, Button, Col } from \"react-bootstrap\";\n\nimport BalanceModal from \"./common/BalanceModal\";\nimport { MODE, PROJECT_NAME } from \"../helpers/constant\";\nimport { initWeb3 } from \"../wallets/metamask\";\nimport WalletConnect from \"./wallet-connect/walletConnect\";\n\nimport GCVLogo from \"../assets/img/brand/header-logo.png\";\n\nclass Header extends React.Component {\n  renderCurrentAddressBox() {\n    if (this.props.wallet.connected === false) return \"Not Connected\";\n\n    if (!this.props.balance) return \"Loading\";\n\n    const balances = [\"native\", \"token\"];\n\n    const resp = Object.keys(this.props.balance).reduce((acc, curr) => {\n      if (balances.includes(curr)) {\n        acc.push({ name: curr, balance: this.props.balance[curr] });\n      }\n      return acc;\n    }, []);\n\n    return (\n      <>\n        <Col lg={12} sm={12} md={12}>\n          <BalanceModal data={[...resp]} />\n        </Col>\n      </>\n    );\n  }\n\n  getMode() {\n    if (MODE === \"offline\")\n      return (\n        <div className=\"network-wrapper\">\n          <div className=\"network\">\n            <div className=\"network grey\">OFFLINE</div>\n          </div>\n        </div>\n      );\n    return \"\";\n  }\n\n  getWalletBtn() {\n    let btnName = \"CONNECT\",\n      disabled = false;\n\n    if (this.props.wallet.connected && this.props.wallet.valid_network) {\n      btnName = \"WALLET CONNECTED\";\n      disabled = true;\n    } else if (\n      this.props.wallet.connected &&\n      !this.props.wallet.valid_network\n    ) {\n      btnName = \"INCORRECT NETWORK\";\n      disabled = true;\n    }\n    return (\n      <div className=\"ml-auto\">\n        <WalletConnect disabled={disabled} btnName={btnName} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Navbar className=\"custom-header\" bg=\"light\" expand=\"lg\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img src={GCVLogo} />\n        </Link>\n\n        {this.getMode()}\n\n        {this.getWalletBtn()}\n      </Navbar>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet, balance }) {\n  return { wallet, balance };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import Xdc3 from \"xdc3\";\n\nimport _, { add } from \"lodash\";\n\nimport {\n  CONTRACT_ABI,\n  CONTRACT_ADDRESS,\n  DEFAULT_PROVIDER,\n} from \"../helpers/constant\";\n\nimport store from \"../redux/store\";\nimport { GetRevertReason } from \"../helpers/crypto\";\n\n/**\n *\n * directly deals with an account represented in an object from Xdc3 / Web3\n *\n */\n\n/**\n *\n * const account = {address, privateKey}\n *\n *\n */\n\nexport async function init() {}\n\nexport async function SubmitContractTxGeneral(\n  method,\n  type,\n  stateMutability,\n  abi,\n  address,\n  ...params\n) {\n  return new Promise(async (resolve, reject) => {\n    const data = store.getState();\n    const { account } = data.wallet;\n    if (!account) reject(\"Account not loaded\");\n    const { privateKey } = account;\n    if (_.isEmpty(privateKey)) reject(\"Account not loaded\");\n\n    const xdc3 = new Xdc3(\n      new Xdc3.providers.HttpProvider(data.wallet.provider)\n    );\n\n    const contract = new xdc3.eth.Contract(abi, address);\n\n    if (stateMutability === \"view\") {\n      contract.methods[method](...params)\n        .call()\n        .then((resp) => {\n          resolve(resp);\n        })\n        .catch(reject);\n    } else if (stateMutability === \"payable\") {\n      const [value] = params.splice(params.length - 1, 1);\n\n      const data = contract.methods[method](...params).encodeABI();\n\n      const state = store.getState();\n      const { address: walletAddress } = state.wallet;\n\n      const tx = {\n        from: walletAddress.toLowerCase(),\n        to: address,\n        data,\n        value,\n      };\n\n      let gasLimit;\n\n      try {\n        gasLimit = await xdc3.eth.estimateGas(tx);\n      } catch (e) {\n        const reason = await GetRevertReason(tx);\n        reject({ message: reason });\n        return;\n      }\n\n      tx[\"gas\"] = gasLimit;\n\n      const signed = await xdc3.eth.accounts.signTransaction(tx, privateKey);\n      xdc3.eth\n        .sendSignedTransaction(signed.rawTransaction)\n        .once(\"receipt\", (receipt) => {\n          if (receipt !== null) {\n            if (receipt.status) {\n              resolve(receipt);\n            } else {\n              reject(receipt);\n            }\n          }\n        });\n\n      // })\n      // .catch(reject);\n    } else {\n      const data = contract.methods[method](...params).encodeABI();\n\n      const state = store.getState();\n      const { address: walletAddress } = state.wallet;\n\n      const tx = {\n        from: walletAddress.toLowerCase(),\n        to: address,\n        data,\n      };\n\n      let gasLimit;\n\n      try {\n        gasLimit = await xdc3.eth.estimateGas(tx);\n      } catch (e) {\n        const reason = await GetRevertReason(tx);\n        reject({ message: reason });\n        return;\n      }\n\n      tx[\"gas\"] = gasLimit;\n\n      const signed = await xdc3.eth.accounts.signTransaction(tx, privateKey);\n      xdc3.eth\n        .sendSignedTransaction(signed.rawTransaction)\n        .once(\"receipt\", (receipt) => {\n          if (receipt !== null) {\n            if (receipt.status) {\n              resolve(receipt);\n            } else {\n              reject(receipt);\n            }\n          }\n        });\n    }\n  });\n}\n\nexport const GetSignedTx = async (\n  abi,\n  address,\n  method,\n  { nonce, gasLimit, gasPrice, chainId },\n  ...params\n) => {\n  const state = store.getState();\n  console.log(\"state.wallet.account\", state.wallet.account);\n  const provider = state.wallet.provider;\n  const xdc3 = new Xdc3(new Xdc3.providers.HttpProvider(provider));\n  const contract = new xdc3.eth.Contract(abi, address);\n  const data = contract.methods[method](...params).encodeABI();\n  const tx = {\n    to: address,\n    nonce: nonce,\n    gasPrice: gasPrice,\n    gas: gasLimit,\n    data: data,\n    chainId: parseFloat(chainId),\n  };\n  const signed = await xdc3.eth.accounts.signTransaction(\n    tx,\n    state.wallet.account.privateKey\n  );\n  return signed.rawTransaction;\n};\n\nexport const GetPastEvents = async (abi, address) => {\n  const state = store.getState();\n  console.log(\"state.wallet.account\", state.wallet.account);\n  const provider = state.wallet.provider;\n  const xdc3 = new Xdc3(new Xdc3.providers.HttpProvider(provider));\n  const contract = new xdc3.eth.Contract(abi, address);\n  return await contract.getPastEvents(\"allEvents\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n};\n","import Xdc3 from \"xdc3\";\nimport { toast } from \"react-toastify\";\n\nimport * as xinpay from \"./xinpay\";\nimport * as account from \"./account\";\n\nimport store from \"../redux/store\";\nimport {\n  EXPLORER,\n  LOADERS,\n  DEFAULT_PROVIDER,\n  BUILD_TX_LINK,\n} from \"../helpers/constant\";\n\nfunction GetFuncFromLoader(loader) {\n  switch (loader) {\n    case LOADERS.Xinpay:\n      return xinpay;\n    case LOADERS.Keystore:\n      return account;\n    case LOADERS.Privatekey:\n      return account;\n    default:\n      return xinpay;\n  }\n}\n\n/**\n *\n *\n * @note directly get from default provider\n *\n */\nexport function GetNativeBalance() {\n  const state = store.getState();\n  return new Promise((resolve, reject) => {\n    const xdc3 = new Xdc3(\n      new Xdc3.providers.HttpProvider(state.wallet.provider)\n    );\n    const wallet = store.getState();\n    const address = wallet.wallet.address;\n    xdc3.eth.getBalance(address).then(resolve).catch(reject);\n  });\n}\n\nexport function IsLocked(...params) {\n  return new Promise((resolve, reject) => {\n    const wallet = store.getState();\n    GetFuncFromLoader(wallet.wallet.chain_id)\n      .IsLocked(...params)\n      .then((resp) => {\n        resolve(resp);\n      })\n      .catch((e) => {\n        console.log(\"resp\", IsJsonRpcError(e));\n        console.log(\"resp\", e);\n        reject(e);\n      });\n  });\n}\n\nexport function SubmitContractTxGeneral(...params) {\n  return new Promise((resolve, reject) => {\n    const wallet = store.getState();\n    let toastId;\n    if (params[2] !== \"view\")\n      toastId = toast(\"Processing TX ...\", {\n        position: \"bottom-right\",\n        type: \"processing-tx\",\n        autoClose: false,\n        hideProgressBar: false,\n        closeOnClick: false,\n        pauseOnHover: true,\n        draggable: false,\n        progress: undefined,\n        closeButton: false,\n      });\n\n    GetFuncFromLoader(wallet.wallet.loader)\n      .SubmitContractTxGeneral(...params)\n      .then((resp) => {\n        if (resp.transactionHash) {\n          const { transactionHash } = resp;\n          toast(\n            <div>\n              Sucsess&nbsp;\n              <a\n                href={BUILD_TX_LINK(EXPLORER, transactionHash)}\n                // href={`${EXPLORER}/tx/${transactionHash}`}\n                rel=\"noreferrer\"\n                target=\"_blank\"\n              >\n                HASH\n              </a>\n            </div>,\n            {\n              position: \"bottom-right\",\n              type: \"success-tx\",\n              autoClose: false,\n              hideProgressBar: false,\n              closeButton: true,\n              closeOnClick: false,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            }\n          );\n        }\n\n        resolve(resp);\n      })\n      .catch((e) => {\n        console.log(\"resp\", IsJsonRpcError(e));\n        console.log(\"resp\", e, e.message);\n        const message = e.message || <>Failing Transaction</>;\n        toast(\n          <div>\n            <b>Error</b>:{message}\n          </div>,\n          {\n            position: \"bottom-right\",\n            type: \"error\",\n            autoClose: false,\n            hideProgressBar: false,\n            closeButton: true,\n            closeOnClick: false,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n          }\n        );\n        reject(e);\n      })\n      .finally(() => {\n        if (toastId) toast.dismiss(toastId);\n      });\n  });\n}\n\nexport async function GetFromAddress(hash) {\n  const wallet = store.getState();\n  return await GetFuncFromLoader(wallet.wallet.chain_id).GetFromAddress(hash);\n}\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nexport const GetJsonRpcError = (err) => {\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\n};\n\nexport const IsAddressEqual = (a, b) => {\n  a = xinpay.fromXdcAddress(a).toLowerCase();\n  b = xinpay.fromXdcAddress(b).toLowerCase();\n  return a === b;\n};\n\nexport async function GetPastEvents(abi, address) {\n  console.log(\"eventsevents\");\n  const wallet = store.getState();\n  return await GetFuncFromLoader(wallet.wallet.loader).GetPastEvents(\n    abi,\n    address\n  );\n}\n\nexport function GetSignedTx(...params) {\n  const wallet = store.getState();\n  return GetFuncFromLoader(wallet.wallet.loader).GetSignedTx(...params);\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nimport { Container, Row, Col, Card, Accordion } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronDown,\n  faCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass AccordionWindow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.defActive === true ? \"0\" : \"-1\",\n    };\n  }\n\n  renderSymbol() {\n    return this.state.active === \"0\" ? faChevronDown : faChevronRight;\n  }\n\n  render() {\n    return (\n      <Accordion className=\"liquidator-config\" activeKey={this.state.active}>\n        <Card>\n          <Accordion.Toggle\n            as={Card.Header}\n            eventKey=\"0\"\n            onClick={() =>\n              this.setState({ active: this.state.active === \"0\" ? \"-1\" : \"0\" })\n            }\n          >\n            <span>{this.props.title}</span>\n            <span className=\"u-float-r\">\n              <FontAwesomeIcon icon={this.renderSymbol()} />\n            </span>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body className={this.props.childClass}>\n              {this.props.children}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n}\n\nexport default AccordionWindow;\n","import _ from \"lodash\";\n\nimport AccordionWindow from \"./AccordionWindow\";\n\nexport const GeneralObjectViewer = (data) => {\n  return (\n    <div className=\"general-object-viewer\">{_generalObjectViewer(data)}</div>\n  );\n};\nconst _generalObjectViewer = (data) => {\n  if (!_.isArray(data) && !_.isObject(data)) {\n    return <div>{data}</div>;\n  }\n\n  if (_.isArray(data)) {\n    return data.map((x, k) => {\n      let child;\n      if (_.isObject(data[k])) {\n        child = GeneralObjectViewer(data[k]);\n        return <AccordionWindow title={k}>{child}</AccordionWindow>;\n      } else {\n        child = data[k];\n        return <div>{child}</div>;\n      }\n    });\n  } else {\n    return Object.keys(data).map((k) => {\n      let child;\n      if (_.isObject(data[k])) {\n        child = GeneralObjectViewer(data[k]);\n      } else {\n        child = data[k];\n      }\n      return <AccordionWindow title={k}>{child}</AccordionWindow>;\n    });\n  }\n};\n\nexport const GeneralObjectUpdater = () => {};\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport copy from \"copy-to-clipboard\";\nimport _ from \"lodash\";\n\nimport {\n  GetJsonRpcError,\n  IsJsonRpcError,\n  SubmitContractTxGeneral,\n} from \"../../wallets\";\nimport { EXPLORER, LOADERS, MODE } from \"../../helpers/constant\";\nimport { GeneralObjectViewer } from \"./ObjectComponent\";\nimport { GetSignedTx } from \"../../wallets\";\nimport { RenderQR } from \"./common\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport { toast } from \"react-toastify\";\nimport store from \"../../redux/store\";\n\nconst RenderInput = ({ field, ...inputProps }) => (\n  <Row>\n    <Col lg={4} md={4} sm={12}>\n      <label className=\"form-control\">{field}</label>\n    </Col>\n    <Col lg={8} md={8} sm={12}>\n      <input className=\"form-control\" {...inputProps} />\n    </Col>\n  </Row>\n);\n/**\n *\n * !FIX: DOB & File input types\n */\nexport const RenderInputCustomType = ({\n  field,\n  onChange: cb,\n  type = \"text\",\n  value,\n  setInput,\n  onBlur = () => {},\n  formData,\n  setFormData,\n  ...inputProps\n}) => {\n  let customInput = null;\n  switch (type) {\n    case \"text\":\n    case \"number\":\n      customInput = (\n        <input\n          type={type}\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n          onBlur={(e) => onBlur(e, { setInput, formData, setFormData })}\n          {...inputProps}\n        />\n      );\n      break;\n    case \"select\":\n      customInput = (\n        <select\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n        >\n          {inputProps.options.map(({ label, value: curVal }, i) => (\n            <option key={i + 1} value={curVal}>\n              {label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case \"radio\":\n      customInput = (\n        <>\n          {inputProps.options.map(({ value: curVal, label }, i) => (\n            <div className=\"input-dynamic-form__input-radio\" key={i + 1}>\n              <Form.Label>\n                <input\n                  type={type}\n                  value={curVal}\n                  name={field}\n                  key={i + 1}\n                  onClick={(e) => {\n                    cb(e.target.value);\n                  }}\n                  defaultChecked={curVal === value}\n                />\n                {label}\n              </Form.Label>\n            </div>\n          ))}\n        </>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return (\n    <Row>\n      <Col lg={4} md={4} sm={12}>\n        <label className=\"form-control\">{field}</label>\n      </Col>\n      <Col lg={8} md={8} sm={12}>\n        {customInput}\n      </Col>\n    </Row>\n  );\n};\n\nexport const RenderInputCustomType2 = ({\n  field,\n  onChange: cb,\n  type = \"text\",\n  value,\n  setInput,\n  onBlur = () => {},\n  formData,\n  setFormData,\n  ...inputProps\n}) => {\n  let customInput = null;\n  switch (type) {\n    case \"text\":\n    case \"number\":\n      customInput = (\n        <input\n          type={type}\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n          onBlur={(e) => onBlur(e, { setInput, formData, setFormData })}\n          {...inputProps}\n        />\n      );\n      break;\n    case \"select\":\n      customInput = (\n        <select\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n        >\n          {inputProps.options.map(({ label, value: curVal }, i) => (\n            <option key={i + 1} value={curVal}>\n              {label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case \"radio\":\n      customInput = (\n        <>\n          {inputProps.options.map(({ value: curVal, label }, i) => (\n            <div className=\"input-dynamic-form__input-radio\" key={i + 1}>\n              <Form.Label>\n                <input\n                  type={type}\n                  value={curVal}\n                  name={field}\n                  key={i + 1}\n                  onClick={(e) => {\n                    cb(e.target.value);\n                  }}\n                  defaultChecked={curVal === value}\n                />\n                {label}\n              </Form.Label>\n            </div>\n          ))}\n        </>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return (\n    <Row>\n      <Col lg={12} md={12} sm={12}>\n        <label className=\"form-control field-label\">{field}</label>\n      </Col>\n      <Col className=\"field-input\" lg={12} md={12} sm={12}>\n        {customInput}\n      </Col>\n    </Row>\n  );\n};\n\nfunction RawTxForm({ cb, data, params }) {\n  const state = store.getState();\n\n  const [nonce, setnonce] = useState(0);\n  const [gasPrice, setgasPrice] = useState(9000);\n  const [gasLimit, setgasLimit] = useState(50000);\n  const [chainId, setchainId] = useState(state.wallet.chain_id);\n\n  if (![LOADERS.Privatekey, LOADERS.Keystore].includes(state.wallet.loader)) {\n    return \"Only compatible with Private Key & Keystore connections\";\n  }\n\n  return (\n    <Container>\n      <hr />\n      <br />\n\n      <Row>\n        <Col sm={12} lg={4} md={4}>\n          Chain ID\n        </Col>\n        <Col sm={12} lg={8} md={8}>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            value={chainId}\n            onChange={(e) => setchainId(e.target.value)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12} lg={4} md={4}>\n          Nonce\n        </Col>\n        <Col sm={12} lg={8} md={8}>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            value={nonce}\n            onChange={(e) => setnonce(e.target.value)}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col sm={12} lg={4} md={4}>\n          Gas Price\n        </Col>\n        <Col sm={12} lg={8} md={8}>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            value={gasPrice}\n            onChange={(e) => setgasPrice(e.target.value)}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col sm={12} lg={4} md={4}>\n          Gas Limit\n        </Col>\n        <Col sm={12} lg={8} md={8}>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            value={gasLimit}\n            onChange={(e) => setgasLimit(e.target.value)}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col className={\"u-float-r\"}>\n          <Button\n            onClick={async () => {\n              console.log(\"{ nonce, gasLimit, gasPrice, chainId }\", {\n                nonce,\n                gasLimit,\n                gasPrice,\n                chainId,\n              });\n              const rawTx = await GetSignedTx(\n                data.abi,\n                data.address,\n                data.method,\n                { nonce, gasLimit, gasPrice, chainId },\n                ...params\n              );\n              cb(rawTx);\n            }}\n          >\n            Get QR\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nfunction RenderRawTx(x) {\n  return (\n    <Container>\n      <Row>\n        <Col className=\"u-text-center\">\n          <h3>Signed TX HASH</h3>\n        </Col>\n      </Row>\n\n      <hr />\n\n      <Row>\n        <Col className=\"u-text-center qr-code-wrapper\">{RenderQR(x, 200)}</Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Button\n            className=\"u-float-r\"\n            onClick={() => {\n              copy(x);\n              toast(\"copied\", { autoClose: 1000 });\n            }}\n          >\n            <FontAwesomeIcon icon={faCopy} />\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\n/**\n *\n * @param {*} props class properties\n */\nexport const DynamicForm = (props) => {\n  const [inputs, setInputs] = useState(\n    props.data.map(({ value = \"\", defaultValue = \"\" }) => {\n      if (value !== \"\") {\n        return value;\n      } else if (defaultValue !== \"\") {\n        return defaultValue;\n      }\n    })\n  );\n\n  const [loading, setLoading] = useState(false);\n  const [showRawTxForm, setshowRawTx] = useState(false);\n  const [formData, setFormDatas] = useState(props.data);\n\n  useEffect(() => {\n    setFormDatas(props.data);\n  }, [props.data]);\n\n  const setInput = (i, v) => setInputs(Object.assign([...inputs], { [i]: v }));\n  const setFormData = (i, v) =>\n    setFormDatas(Object.assign([...formData], { [i]: v }));\n\n  return (\n    <Container className=\"custom-input-1 dynamic-form\">\n      {formData.map(({ name, type, ...rest }, i) => (\n        <RenderInputCustomType2\n          field={name}\n          type={type}\n          value={inputs[i]}\n          key={i}\n          setInput={(i, e) => setInput(i, e)}\n          onChange={(e) => setInput(i, e)}\n          formData={formData}\n          setFormData={setFormData}\n          {...rest}\n        />\n      ))}\n      {props.stateMutability !== \"view\" ? (\n        <Button onClick={() => setshowRawTx(!showRawTxForm)}>Sign</Button>\n      ) : (\n        \"\"\n      )}\n\n      <Button\n        onClick={() => {\n          setLoading(true);\n          SubmitContractTxGeneral(\n            props.method,\n            props.contractType || \"token\",\n            props.stateMutability,\n            props.abi,\n            props.address,\n            ...inputs\n          )\n            .then((resp) => {\n              let respStr;\n              if (_.isObject(resp) === true)\n                respStr = GeneralObjectViewer(resp);\n              else respStr = `${resp}`;\n\n              if (resp && resp.transactionHash) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Transaction Hash</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>\n                          {/* <a\n                            target=\"_blank\"\n                            href={`${EXPLORER}/tx/${resp.transactionHash}`}\n                          >\n                            TX HASH\n                          </a> */}\n                        </span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else if (resp !== null) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Response</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>{respStr}</span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else {\n                props.setModalContent(\"error\");\n              }\n\n              setLoading(false);\n            })\n            .catch((e) => {\n              console.log(\"err\", e);\n              if (IsJsonRpcError(e)) {\n                const err = GetJsonRpcError(e);\n                props.setModalContent(`Error: ${err.message}`);\n                setLoading(false);\n                return;\n              }\n              alert(\"Error\");\n              setLoading(false);\n            });\n        }}\n        variant=\"primary\"\n        style={{ width: \"10rem\", float: \"right\" }}\n        disabled={loading || MODE === \"offline\"}\n      >\n        Submit\n      </Button>\n\n      <Row>\n        <Col>\n          {showRawTxForm ? (\n            <RawTxForm\n              data={props}\n              params={inputs}\n              cb={(x) => {\n                console.log(\"rawTX\", x);\n                props.setModalContent(RenderRawTx(x));\n              }}\n            />\n          ) : (\n            \"\"\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport const SelectOption = [{ label: \"Select\", value: null }];\n\nexport const DynamicActionBtn = (props) => {\n  const [loading, setLoading] = useState(false);\n  let customBtn = null;\n  switch (props.type) {\n    case \"actionBtn\":\n      customBtn = (\n        <Button\n          variant={props.options.variant}\n          onClick={() => {\n            setLoading(false);\n            // PostApi(props.api, \"\", () => setLoading(true));\n          }}\n        >\n          {\" \"}\n          {props.options.name}\n        </Button>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return customBtn;\n};\n","import { Card, Container } from \"react-bootstrap\";\n\nimport { DynamicForm } from \"./RenderCustomView\";\n\nconst FunctionCard = ({\n  title,\n  inputs,\n  stateMutability,\n  setModalContent,\n  contractType = \"token\",\n  abi, \n  address\n}) => {\n  const mutabilityClass = `title__state-mutability ${stateMutability}`;\n  return (\n    <Card className=\"custom-card-2\">\n      <Card.Title>\n        <div className=\"title\">\n          <span className=\"title__function-name\">{title}</span>\n          <span className={mutabilityClass}>{stateMutability}</span>\n          <div className=\"title__bottom\"></div>\n        </div>\n      </Card.Title>\n      <Card.Body>\n        <DynamicForm\n          data={[...inputs]}\n          method={title}\n          contractType={contractType}\n          stateMutability={stateMutability}\n          setModalContent={setModalContent}\n          abi={abi}\n          address={address}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FunctionCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction AbiInput({ abi = \"\", addr = \"\", setAbi, setAddress }) {\n  return (\n    <div className=\"abi-input\">\n      <Container>\n        <Row>\n          <Col lg={12} md={12} sm={12} className=\"field-name\">\n            ABI\n          </Col>\n          <Col lg={12} md={12} sm={12}>\n            <textarea\n              value\n              className=\"form-control abi-json\"\n              value={JSON.stringify(abi, null,\"\\t\")}\n              onChange={(e) => setAbi(e.target.value)}\n              spellcheck=\"false\"\n            />\n          </Col>\n        </Row>\n        <Row>\n        <Col lg={12} md={12} sm={12} className=\"field-name\">\n            Contract Addresss\n          </Col>\n          <Col lg={12} md={12} sm={12}>\n            <input\n              className=\"form-control contract-address\"\n              value={addr}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default AbiInput;\n","import React, { useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst PageNavigation = ({ setactivePath, activePath, links }) => {\n  return (\n    <div className=\"page-navigation\">\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"page-navigation__wrapper\">\n              {links.map(({ name, link, disabled = false }) => (\n                <span\n                  className={\n                    disabled\n                      ? \"disabled nav-link__\"\n                      : link === activePath\n                      ? \"nav-link__ active\"\n                      : \"nav-link__\"\n                  }\n                  to={link}\n                  onClick={() => setactivePath(link)}\n                >\n                  {name}\n                </span>\n              ))}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PageNavigation;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport { GetPastEvents } from \"../../wallets\";\n\nclass PastEvents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n\n    this.loaded = false;\n  }\n\n  renderReturnValues(returnValues) {\n    return (\n      <Container>\n        {Object.keys(returnValues)\n          .filter((x) => isNaN(x))\n          .map((v, i) => (\n            <Row key={i} style={{ textAlign: \"left\" }}>\n              <Col lg={4}>{v}</Col>\n              <Col lg={8}>{returnValues[v]}</Col>\n            </Row>\n          ))}\n      </Container>\n    );\n  }\n\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  componentDidUpdate() {\n    if ((this.loaded = false)) {\n      this.getEvents();\n    }\n  }\n\n  getEvents() {\n    if (this.props.wallet.connected && this.props.wallet.valid_network)\n      GetPastEvents(this.props.abi, this.props.address).then((x) => {\n        console.log(\"events\", x);\n        this.setState({ data: x });\n        this.loaded = true;\n      });\n  }\n\n  renderEvents() {\n    return (\n      <Container className=\"past-events\">\n        <Row className=\"header\" key={0}>\n          <Col lg={3}>TX HASH</Col>\n          <Col lg={3}>EVENT NAME</Col>\n          <Col lg={6}>RETURN VALUES</Col>\n        </Row>\n        {this.state.data\n          .sort(({ blockNumber: a }, { blockNumber: b }) => b - a)\n          .map((v, i) => (\n            <Row className=\"event-row\" key={i + 1}>\n              <Col lg={3}>\n                <a\n                  target=\"_blank\"\n                  href={`${this.props.wallet.explorer}/tx/${v.transactionHash}`}\n                >\n                  HASH\n                </a>\n              </Col>\n              <Col lg={3}>{v.event}</Col>\n              <Col lg={6}>{this.renderReturnValues(v.returnValues)}</Col>\n            </Row>\n          ))}\n      </Container>\n    );\n  }\n\n  render() {\n    if (this.props.wallet.connected && this.props.wallet.valid_network) {\n      return (\n        <div style={{ color: \"white\", textAlign: \"center\" }}>\n          {this.renderEvents()}\n        </div>\n      );\n    } else\n      return (\n        <div style={{ color: \"white\", textAlign: \"center\" }}>\n          PLEASE CONNECT WALLET\n        </div>\n      );\n  }\n}\n\nexport default PastEvents;\n","import React, { Component } from \"react\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\n\nimport FunctionCard from \"../common/FunctionCard\";\nimport AbiInput from \"../common/AbiInput\";\nimport AccordionWindow from \"../common/AccordionWindow\";\nimport PageNavigation from \"../common/Navigation\";\n\nimport store from \"../../redux/store\";\nimport * as actions from \"../../actions\";\n\nimport PastEvents from \"./PastEvents\";\n\nimport DEFAULT_ABI from \"../../abi/StorxToken.json\";\nimport {\n  PROJECT_NAME,\n  CONTRACT_ADDRESS,\n  IsJson,\n  NETWORK_NAME,\n  RPC_TO_NETWORK,\n  HTTP_PROVIDER,\n  NETWORK_ICON,\n  MODE,\n  LOADERS,\n} from \"../../helpers/constant\";\n\nconst DEFAULT_ADDRESS = CONTRACT_ADDRESS.token;\n\nconst LINKS = [\n  {\n    name: \"HOME\",\n    link: \"home\",\n  },\n  {\n    name: \"READ\",\n    link: \"read\",\n  },\n  {\n    name: \"WRITE\",\n    link: \"write\",\n  },\n  {\n    name: \"EVENTS\",\n    link: \"events\",\n    disabled: MODE === \"offline\",\n  },\n];\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      modalContent: \"\",\n\n      contractAbi: DEFAULT_ABI,\n      contractAddress: DEFAULT_ADDRESS,\n\n      openTab: \"home\",\n    };\n\n    this.setModalContent = this.setModalContent.bind(this);\n    this.setShowModal = this.setShowModal.bind(this);\n\n    this.setContractAbi = this.setContractAbi.bind(this);\n    this.setContractAddress = this.setContractAddress.bind(this);\n  }\n\n  setShowModal() {\n    this.setState({ showModal: true });\n  }\n\n  setModalContent(modalContent) {\n    this.setState({ modalContent, showModal: true });\n  }\n\n  setContractAbi(abi) {\n    if (typeof abi === \"string\") {\n      if (!IsJson(abi)) {\n        alert(\"Invalid JSON\");\n        return;\n      }\n      abi = JSON.parse(abi.trim());\n    }\n    this.setState({ contractAbi: abi });\n  }\n\n  setContractAddress(addr) {\n    this.setState({ contractAddress: addr });\n  }\n\n  renderNetworkSwitch() {\n    const networks = Object.keys(HTTP_PROVIDER);\n\n    const content = (\n      <div className=\"wallet-connect\">\n        <Container>\n          <Row>\n            <Col className=\"u-text-center\">CHOOSE NETWORK</Col>\n          </Row>\n\n          <br />\n\n          <Row>\n            {networks.map((x) => (\n              <Col sm={12}>\n                <Container>\n                  <Row\n                    onClick={async () => {\n                      store.dispatch(actions.NetworkChanged(x));\n                      this.setState({ showModal: false });\n                    }}\n                  >\n                    <Col className=\"wallet-icon--wrapper\" sm={2} lg={2} md={2}>\n                      <div className=\"wallet-icon\">\n                        <img src={NETWORK_ICON[x]} alt={\"logo\"} />\n                      </div>\n                    </Col>\n                    <Col\n                      className=\"wallet-name-wrapper\"\n                      sm={10}\n                      lg={10}\n                      md={10}\n                    >\n                      <div className=\"wallet-name\">{NETWORK_NAME[x]}</div>\n                    </Col>\n                  </Row>\n                </Container>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    );\n\n    this.setState({ modalContent: content, showModal: true });\n  }\n\n  renderFunctionalityCards(type = \"read\") {\n    const cards = this.state.contractAbi;\n    const mutability = {\n      read: (x) => x === \"view\",\n      write: (x) => x !== \"view\",\n    };\n    if (type !== \"read\") {\n      if (!this.props.wallet.connected || !this.props.wallet.valid_network) {\n        return (\n          <div style={{ color: \"white\", textAlign: \"center\" }}>\n            PLEASE CONNECT WALLET\n          </div>\n        );\n      }\n    }\n    return (\n      <Container>\n        <Row>\n          {cards\n            .filter(\n              (e) =>\n                e.type === \"function\" && mutability[type](e.stateMutability)\n            )\n            .map(({ name, inputs = [], stateMutability }, i) => (\n              <Col lg={6} key={i + 1 + type}>\n                <FunctionCard\n                  title={name}\n                  inputs={inputs.map((e) => {\n                    if (_.isEmpty(e.name)) {\n                      e.name = e.type;\n                    }\n                    return { name: e.name, type: \"text\" };\n                  })}\n                  stateMutability={stateMutability}\n                  setShowModal={this.setShowModal}\n                  setModalContent={this.setModalContent}\n                  abi={this.state.contractAbi}\n                  address={this.state.contractAddress}\n                />\n              </Col>\n            ))}\n        </Row>\n      </Container>\n    );\n  }\n\n  renderContractInput() {\n    return (\n      <AccordionWindow title=\"Enter Contract\" defActive={true}>\n        <AbiInput\n          setAbi={this.setContractAbi}\n          setAddress={this.setContractAddress}\n          abi={this.state.contractAbi}\n          addr={this.state.contractAddress}\n        />\n      </AccordionWindow>\n    );\n  }\n\n  renderDasboard() {\n    switch (this.state.openTab) {\n      case \"home\":\n        return this.renderContractInput();\n      case \"read\":\n        return this.renderFunctionalityCards(\"read\");\n      case \"write\":\n        return this.renderFunctionalityCards(\"write\");\n      case \"events\":\n        return (\n          <PastEvents\n            abi={this.state.contractAbi}\n            address={this.state.contractAddress}\n            wallet={this.props.wallet}\n          />\n        );\n      default:\n        return this.renderContractInput();\n    }\n  }\n\n  renderNetworkName() {\n    if (\n      !this.props.wallet.connected ||\n      [LOADERS.Privatekey, LOADERS.Keystore].includes(this.props.wallet.loader)\n    ) {\n      const networkName =\n        NETWORK_NAME[RPC_TO_NETWORK[this.props.wallet.provider]];\n      return (\n        <div\n          className=\"network grey\"\n          onClick={() => this.renderNetworkSwitch()}\n        >\n          Default: {networkName}\n        </div>\n      );\n    }\n    if (!this.props.wallet.valid_network) {\n      return (\n        <div className=\"network red\">invalid network connected</div>\n      );\n    }\n\n    return (\n      <div className=\"network green\">\n        {NETWORK_NAME[this.props.wallet.chain_id]}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"main-panel general-contract-viewer\">\n        <Container>\n          <Row>\n            <Col className=\"network-wrapper\">{this.renderNetworkName()}</Col>\n          </Row>\n          <Row>\n            <Col>\n              <PageNavigation\n                setactivePath={(x) => this.setState({ openTab: x })}\n                activePath={this.state.openTab}\n                links={LINKS}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>{this.renderDasboard()}</Col>\n          </Row>\n        </Container>\n\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>{PROJECT_NAME}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.state.modalContent}</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.setState({ showModal: false })}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet, balance }) {\n  return { wallet, balance };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\n\nimport * as actions from \"./actions/index\";\n\nimport Header from \"./components/Header\";\n\nimport CacheBuster from \"./cacheBuster\";\nimport packageJson from \"../package.json\";\n\n\nimport \"./assets/scss/main.scss\";\nimport { initWeb3 } from \"./wallets/metamask\";\n\nimport GenContractInteractor from \"./components/GCV\";\n\n\n\n\nclass App extends Component {\n  componentDidMount() {\n    // initWeb3();\n  }\n\n  render() {\n    // const active = window.location.pathname;\n\n    // const links = [\n    //   { link: \"/\", name: \"home\" },\n    //   { link: \"/single-matka\", name: \"Single Matka\" },\n    // ];\n\n    return (\n      <div className=\"App\">\n        <CacheBuster>\n          {({ loading, isLatestVersion, refreshCacheAndReload }) => {\n            // console.log(\"[*] cache policy\", loading, isLatestVersion);\n            if (loading) return null;\n            console.log(`UI Version:`, packageJson.version);\n            if (!loading && !isLatestVersion) {\n              // You can decide how and when you want to force reload\n              refreshCacheAndReload();\n            }\n\n            return null;\n          }}\n        </CacheBuster>\n\n        <Header />\n\n        <GenContractInteractor />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { SubPath } from \"./helpers/constant\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={SubPath}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"static/media/xinpay.91433213.png\";"],"sourceRoot":""}