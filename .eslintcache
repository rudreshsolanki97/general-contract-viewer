[{"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/index.js":"1","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/reportWebVitals.js":"2","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/App.js":"3","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/constant.js":"4","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Header.js":"5","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Dashboard.js":"6","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/wallets/metamask.js":"7","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/AbiParser.js":"8","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/RenderCustomView.js":"9","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Switch.js":"10","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/actions/index.js":"11","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/actions/types.js":"12","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/store.js":"13","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/reducers/index.js":"14","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/reducers/Wallet.js":"15","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/middleware/getDashboardData.js":"16","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/reducers/Dashboard.js":"17","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/middleware/networkValidator.js":"18","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/common/FunctionCard.js":"19","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/common/DataCard.js":"20","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/modal/BalanceModal.js":"21","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/common/GeneralModal.js":"22","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Navigation.js":"23","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Boardroom.js":"24","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Bonds.js":"25"},{"size":762,"mtime":1615549860993,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1615202677306,"results":"28","hashOfConfig":"27"},{"size":1276,"mtime":1616838356138,"results":"29","hashOfConfig":"27"},{"size":1459,"mtime":1616838768291,"results":"30","hashOfConfig":"27"},{"size":2166,"mtime":1616485525980,"results":"31","hashOfConfig":"27"},{"size":664,"mtime":1616486400549,"results":"32","hashOfConfig":"27"},{"size":5958,"mtime":1616500220050,"results":"33","hashOfConfig":"27"},{"size":390,"mtime":1616836982596,"results":"34","hashOfConfig":"27"},{"size":6257,"mtime":1616832073843,"results":"35","hashOfConfig":"27"},{"size":566,"mtime":1615542427119,"results":"36","hashOfConfig":"27"},{"size":723,"mtime":1616341777977,"results":"37","hashOfConfig":"27"},{"size":378,"mtime":1616341714858,"results":"38","hashOfConfig":"27"},{"size":581,"mtime":1616351535912,"results":"39","hashOfConfig":"27"},{"size":157,"mtime":1615552320979,"results":"40","hashOfConfig":"27"},{"size":1160,"mtime":1616342390241,"results":"41","hashOfConfig":"27"},{"size":2244,"mtime":1616839203824,"results":"42","hashOfConfig":"27"},{"size":493,"mtime":1616839153928,"results":"43","hashOfConfig":"27"},{"size":620,"mtime":1616346781256,"results":"44","hashOfConfig":"27"},{"size":649,"mtime":1616342900773,"results":"45","hashOfConfig":"27"},{"size":309,"mtime":1616342898673,"results":"46","hashOfConfig":"27"},{"size":726,"mtime":1616351963778,"results":"47","hashOfConfig":"27"},{"size":1453,"mtime":1616344366243,"results":"48","hashOfConfig":"27"},{"size":548,"mtime":1616348448619,"results":"49","hashOfConfig":"27"},{"size":8503,"mtime":1616837335985,"results":"50","hashOfConfig":"27"},{"size":8436,"mtime":1616839515697,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1juvphs",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/index.js",[],["112","113"],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/reportWebVitals.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/App.js",["114"],"import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"./actions/index\";\n\nimport Header from \"./components/Header\";\nimport PageNavigation from \"./components/Navigation\";\n\nimport Dashboard from \"./components/Dashboard\";\nimport Boardroom from \"./components/Boardroom\";\nimport Bonds from \"./components/Bonds\";\n\nimport \"./assets/scss/main.scss\";\nimport { initWeb3 } from \"./wallets/metamask\";\n\nclass App extends Component {\n  componentDidMount() {\n    initWeb3();\n  }\n\n  render() {\n    const links = [\n      { link: \"/\", name: \"home\" },\n      { link: \"/boardroom\", name: \"boardroom\" },\n      { link: \"/bonds\", name: \"bonds\" },\n      // { link: \"/\", name: \"bank\" },\n    ];\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <PageNavigation links={[...links]} />\n\n        <Switch>\n          <Route path=\"/\" exact={true}>\n            <Dashboard />\n          </Route>\n\n          <Route path=\"/boardroom\" exact={true}>\n            <Boardroom />\n          </Route>\n\n          <Route path=\"/bonds\" exact={true}>\n            <Bonds />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/constant.js",["115","116"],"import BoardroomAbi from \"../abi/boardroom.json\";\nimport ShareAbi from \"../abi/share.json\";\nimport CashAbi from \"../abi/cash.json\";\nimport BondAbi from \"../abi/bond.json\";\nimport TreasuryAbi from \"../abi/treasurey.json\";\n\nexport const SubPath = \"/\";\n\nexport const RemoveExpo = (x) => {\n  var data = String(x).split(/[eE]/);\n  if (data.length == 1) return data[0];\n\n  var z = \"\",\n    sign = x < 0 ? \"-\" : \"\",\n    str = data[0].replace(\".\", \"\"),\n    mag = Number(data[1]) + 1;\n\n  if (mag < 0) {\n    z = sign + \"0.\";\n    while (mag++) z += \"0\";\n    return z + str.replace(/^\\-/, \"\");\n  }\n  mag -= str.length;\n  while (mag--) z += \"0\";\n  return str + z;\n};\n\nexport const CONTRACT_ADDRESS = {\n  cash: \"0x250166887a349b1f64aBB1eB01bAe353b2E3f050\",\n  boardroom: \"0xA58524d9D021E55eb235c09179954eAdC020a9A4\",\n  share: \"0x4C2eD67B03A1F1f555CA2efA959E57645681215d\",\n  bond: \"0x9dBc9DBe8cD506394E7B25E7167A7128778c71B4\",\n  treasury: \"0xA5cF812Ec50EC1cAa500a2e3bdeD8B51D107ec1c\",\n  oracle: \"0x4B5BfC44Ca8C01b98e4399949BCCF28B7fB6E8ed\",\n};\n\nexport const CONTRACT_ABI = {\n  cash: CashAbi,\n  boardroom: BoardroomAbi,\n  share: ShareAbi,\n  bond: BondAbi,\n  treasury: TreasuryAbi,\n};\n\n/**\n * @constant RUNNING_CHAIN  correct chain id, in decimal\n */\nexport const RUNNING_CHAIN = 97;\n\nexport const EXPLORER = \"https://testnet.bscscan.com/\";\n\nexport const IsHex = (n) => {\n  const re = /[0-9A-Fa-f]{6}/g;\n\n  if (re.test(n)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Header.js",["117","118"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { Navbar, Button, Col, Container, Row } from \"react-bootstrap\";\n\nimport BalanceModal from \"./modal/BalanceModal\";\n\nclass Header extends React.Component {\n  renderCurrentAddressBox() {\n    if (this.props.wallet.connected === false) return \"Not Connected\";\n\n    if (!this.props.dashboard) return \"Loading\";\n\n    const balances = [\"bond\", \"share\", \"cash\"];\n\n    const resp = Object.keys(this.props.dashboard).reduce((acc, curr) => {\n      if (balances.includes(curr)) {\n        acc.push({ name: curr, balance: this.props.dashboard[curr] });\n      }\n      return acc;\n    }, []);\n\n    return (\n      <>\n        <Col lg={12} sm={12} md={12}>\n          <BalanceModal data={[...resp]} />\n        </Col>\n      </>\n    );\n  }\n\n  getWalletBtn() {\n    if (this.props.wallet.connected && this.props.wallet.valid_network) {\n      return (\n        <>\n          <div className=\"ml-auto\">{this.renderCurrentAddressBox()}</div>\n          <div className=\"\">\n            <Button disabled={true} aria-controls=\"basic-navbar-nav\">\n              WALLET CONNECTED\n            </Button>\n          </div>\n        </>\n      );\n    } else if (\n      this.props.wallet.connected &&\n      !this.props.wallet.valid_network\n    ) {\n      return (\n        <>\n          {/* <div className=\"ml-auto\">{this.renderCurrentAddressBox()}</div> */}\n          <div className=\"ml-auto\">\n            <Button disabled={true} aria-controls=\"basic-navbar-nav\">\n              INCORRECT NETWORK\n            </Button>\n          </div>\n        </>\n      );\n    } else {\n      <div className=\"ml-auto\">\n        <Button disabled={true} aria-controls=\"basic-navbar-nav\">\n          CONNECT WALLET\n        </Button>\n      </div>;\n    }\n  }\n\n  render() {\n    return (\n      <Navbar className=\"custom-header\" bg=\"light\" expand=\"lg\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          MEDICI\n        </Link>\n\n        {this.getWalletBtn()}\n      </Navbar>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet, dashboard }) {\n  return { wallet, dashboard };\n}\n\nexport default connect(mapStateToProps)(Header);\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Dashboard.js",["119","120"],"import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\n\nimport cover from \"../assets/img/cover.jpg\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"main-panel dashboard\">\n        <Container>\n          <Row>\n            <Col lg={12} sm={12} md={12} className=\"boardroom__banner\">\n              MEDICI\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet, dashboard }) {\n  return { wallet, dashboard };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/wallets/metamask.js",["121","122"],"import Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport {\n  CONTRACT_ABI,\n  CONTRACT_ADDRESS,\n  RemoveExpo,\n} from \"../helpers/constant\";\n\nimport * as actions from \"../actions\";\nimport store from \"../redux/store\";\n\nlet addresses, web3;\n\nexport function IsWeb3Supported() {\n  return Boolean(window.ethereum);\n}\n\nexport async function GetProvider() {\n  const provider = await detectEthereumProvider();\n  return provider;\n}\n\nexport async function GetChainId() {\n  const provider = await detectEthereumProvider();\n  return await web3.eth.net.getId();\n}\n\nexport async function initWeb3() {\n  const isWeb3Supported = IsWeb3Supported();\n  if (!isWeb3Supported) return store.dispatch(actions.WalletDisconnected());\n  if (GetCurrentProvider() !== \"metamask\")\n    return store.dispatch(actions.WalletDisconnected());\n  const isConnected = await window.ethereum.isConnected();\n  await window.ethereum.enable();\n  _initListerner();\n  web3 = new Web3(await GetProvider());\n  const accounts = await web3.eth.getAccounts();\n  addresses = accounts;\n  const chain_id = await web3.eth.getChainId();\n  return store.dispatch(\n    actions.WalletConnected({ address: accounts[0], chain_id })\n  );\n}\n\nexport async function _initListerner() {\n  window.ethereum.removeAllListeners();\n\n  window.ethereum.on(\"accountsChanged\", async (data) => {\n    const accounts = await web3.eth.getAccounts();\n    addresses = accounts;\n    store.dispatch(actions.AccountChanged(accounts[0]));\n  });\n\n  window.ethereum.on(\"chainChanged\", async (data) => {\n    const chain_id = await web3.eth.getChainId();\n    store.dispatch(actions.NetworkChanged(chain_id));\n  });\n\n  window.ethereum.on(\"connect\", async (data) => {\n    web3 = new Web3(await GetProvider());\n    const accounts = await web3.eth.getAccounts();\n    const chain_id = await web3.eth.getChainId();\n    addresses = accounts;\n    return store.dispatch(\n      actions.WalletConnected({ address: accounts[0], chain_id })\n    );\n  });\n\n  window.ethereum.on(\"disconnect\", (data) => {\n    console.log(\"disconnect\", data);\n  });\n\n  window.ethereum.on(\"message\", (data) => {\n    console.log(\"message\", data);\n  });\n}\n\nexport function GetCurrentProvider() {\n  if (IsWeb3Supported() !== true) return null;\n\n  if (window.web3.currentProvider.isMetaMask) return \"metamask\";\n\n  if (window.web3.currentProvider.isTrust) return \"trust\";\n\n  if (window.web3.currentProvider.isStatus) return \"status\";\n\n  if (typeof window.SOFA !== \"undefined\") return \"coinbase\";\n\n  if (typeof window.__CIPHER__ !== \"undefined\") return \"cipher\";\n\n  if (window.web3.currentProvider.constructor.name === \"EthereumProvider\")\n    return \"mist\";\n\n  if (window.web3.currentProvider.constructor.name === \"Web3FrameProvider\")\n    return \"parity\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"infura\") !== -1\n  )\n    return \"infura\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"localhost\") !== -1\n  )\n    return \"localhost\";\n\n  return \"unknown\";\n}\n\nexport async function SubmitContractTx(method, stateMutability, ...params) {\n  try {\n    const web3 = new Web3(window.web3.currentProvider);\n    const { abi: boardroomAbi, address: boardroomAddress } = getContractAddress(\n      \"boardroom\"\n    );\n    const { abi: shareAbi, address: shareAddress } = getContractAddress(\n      \"share\"\n    );\n\n    const contract = new web3.eth.Contract(boardroomAbi, boardroomAddress);\n    const shareContract = new web3.eth.Contract(shareAbi, shareAddress);\n\n    if (stateMutability === \"view\") {\n      const resp = await contract.methods[method](...params).call({\n        from: addresses[0],\n      });\n\n      return resp;\n    } else {\n      if (method === \"stake\") {\n        let amount = params[0];\n        amount = RemoveExpo(parseFloat(amount) * 10 ** 18);\n        console.log(\"from\", addresses[0], amount);\n\n        const gasLimit = await contract.methods[method](amount).estimateGas({\n          from: addresses[0],\n        });\n        const resp = await contract.methods[method](amount).send({\n          from: addresses[0],\n          gas: gasLimit,\n        });\n\n        return resp;\n      } else if (method === \"approve\") {\n        let [spender, amount] = params;\n        amount = RemoveExpo(parseFloat(amount) * 10 ** 18);\n        const gasLimit = await shareContract.methods[method](\n          spender,\n          amount\n        ).estimateGas({\n          from: addresses[0],\n        });\n        const resp = await shareContract.methods[method](spender, amount).send({\n          from: addresses[0],\n          gas: gasLimit,\n        });\n\n        return resp;\n      } else {\n        const gasLimit = await contract.methods[method](...params).estimateGas({\n          from: addresses[0],\n        });\n        const resp = await contract.methods[method](...params).send({\n          from: addresses[0],\n          gas: gasLimit,\n        });\n\n        return resp;\n      }\n    }\n  } catch (e) {\n    console.log(\"error\", e);\n    return null;\n  }\n}\n\nexport async function SubmitContractTxGeneral(\n  method,\n  type,\n  stateMutability,\n  ...params\n) {\n  try {\n    const web3 = new Web3(window.web3.currentProvider);\n\n    const { address, abi } = getContractAddress(type);\n\n    const contract = new web3.eth.Contract(abi, address);\n\n    if (stateMutability === \"view\") {\n      const resp = await contract.methods[method](...params).call({\n        from: addresses[0],\n      });\n\n      return resp;\n    } else {\n      const gasLimit = await contract.methods[method](...params).estimateGas({\n        from: addresses[0],\n      });\n      const resp = await contract.methods[method](...params).send({\n        from: addresses[0],\n        gas: gasLimit,\n      });\n\n      return resp;\n    }\n  } catch (e) {\n    console.log(\"resp\", e);\n    return null;\n  }\n}\n\nfunction getContractAddress(type) {\n  return {\n    address: CONTRACT_ADDRESS[type],\n    abi: CONTRACT_ABI[type],\n  };\n}\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/AbiParser.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/RenderCustomView.js",["123","124","125"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nimport { SubmitContractTx } from \"../wallets/metamask\";\nimport { EXPLORER } from \"../helpers/constant\";\n\nconst RenderInput = ({ field, ...inputProps }) => (\n  <Row>\n    <Col lg={4} md={4} sm={12}>\n      <label className=\"form-control\">{field}</label>\n    </Col>\n    <Col lg={8} md={8} sm={12}>\n      <input className=\"form-control\" {...inputProps} />\n    </Col>\n  </Row>\n);\n/**\n *\n * !FIX: DOB & File input types\n */\nexport const RenderInputCustomType = ({\n  field,\n  onChange: cb,\n  type = \"text\",\n  value,\n  setInput,\n  onBlur = () => {},\n  formData,\n  setFormData,\n  ...inputProps\n}) => {\n  let customInput = null;\n  switch (type) {\n    case \"text\":\n    case \"number\":\n      customInput = (\n        <input\n          type={type}\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n          onBlur={(e) => onBlur(e, { setInput, formData, setFormData })}\n          {...inputProps}\n        />\n      );\n      break;\n    case \"select\":\n      customInput = (\n        <select\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n        >\n          {inputProps.options.map(({ label, value: curVal }, i) => (\n            <option key={i + 1} value={curVal}>\n              {label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case \"radio\":\n      customInput = (\n        <>\n          {inputProps.options.map(({ value: curVal, label }, i) => (\n            <div className=\"input-dynamic-form__input-radio\" key={i + 1}>\n              <Form.Label>\n                <input\n                  type={type}\n                  value={curVal}\n                  name={field}\n                  key={i + 1}\n                  onClick={(e) => {\n                    cb(e.target.value);\n                  }}\n                  defaultChecked={curVal === value}\n                />\n                {label}\n              </Form.Label>\n            </div>\n          ))}\n        </>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return (\n    <Row>\n      <Col lg={4} md={4} sm={12}>\n        <label className=\"form-control\">{field}</label>\n      </Col>\n      <Col lg={8} md={8} sm={12}>\n        {customInput}\n      </Col>\n    </Row>\n  );\n};\n\n/**\n *\n * @param {*} props class properties\n */\nexport const DynamicForm = (props) => {\n  const [inputs, setInputs] = useState(\n    props.data.map(({ value = \"\", defaultValue = \"\" }) => {\n      if (value !== \"\") {\n        return value;\n      } else if (defaultValue !== \"\") {\n        return defaultValue;\n      }\n      return \"\";\n    })\n  );\n\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormDatas] = useState(props.data);\n\n  useEffect(() => {\n    setFormDatas(props.data);\n  }, [props.data]);\n\n  const setInput = (i, v) => setInputs(Object.assign([...inputs], { [i]: v }));\n  const setFormData = (i, v) =>\n    setFormDatas(Object.assign([...formData], { [i]: v }));\n\n  return (\n    <Container className=\"custom-input-1 dynamic-form\">\n      {formData.map(({ name, type, ...rest }, i) => (\n        <RenderInputCustomType\n          field={name}\n          type={type}\n          value={inputs[i]}\n          key={i}\n          setInput={(i, e) => setInput(i, e)}\n          onChange={(e) => setInput(i, e)}\n          formData={formData}\n          setFormData={setFormData}\n          {...rest}\n        />\n      ))}\n      <Button\n        onClick={() => {\n          setLoading(true);\n          SubmitContractTx(props.method, props.stateMutability, ...inputs)\n            .then((resp) => {\n              let respStr;\n              if (_.isObject(resp)) respStr = JSON.stringify(resp);\n\n              if (resp && resp.transactionHash) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Transaction Hash</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>\n                          <a\n                            target=\"_blank\"\n                            href={`${EXPLORER}/tx/${resp.transactionHash}`}\n                          >\n                            TX HASH\n                          </a>\n                        </span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else if (resp !== null) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Response</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>{respStr}</span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else {\n                props.setModalContent(\"error\");\n              }\n\n              setLoading(false);\n            })\n            .catch((e) => {\n              console.log(\"error\", e);\n              alert(\"Error\");\n              props.setModalContent(\"error\");\n              setLoading(false);\n            });\n        }}\n        variant=\"primary\"\n        style={{ width: \"10rem\", float: \"right\" }}\n        disabled={loading}\n      >\n        Submit\n      </Button>\n    </Container>\n  );\n};\n\nexport const SelectOption = [{ label: \"Select\", value: null }];\n\nexport const DynamicActionBtn = (props) => {\n  const [loading, setLoading] = useState(false);\n  let customBtn = null;\n  switch (props.type) {\n    case \"actionBtn\":\n      customBtn = (\n        <Button\n          variant={props.options.variant}\n          onClick={() => {\n            setLoading(false);\n            // PostApi(props.api, \"\", () => setLoading(true));\n          }}\n        >\n          {\" \"}\n          {props.options.name}\n        </Button>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return customBtn;\n};\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Switch.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/actions/index.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/actions/types.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/store.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/reducers/index.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/reducers/Wallet.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/middleware/getDashboardData.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/redux/reducers/Dashboard.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/middleware/networkValidator.js",["126"],"import _ from \"lodash\";\nimport * as types from \"../actions/types\";\nimport * as actions from \"../actions\";\nimport { IsHex, RUNNING_CHAIN } from \"../helpers/constant\";\n\nexport const NetworkValidation = (store) => (next) => (action) => {\n  if (\n    [types.WALLET_CONNECTED, types.WALLET_CHAIN_CHANGED].includes(action.type)\n  ) {\n    let { chain_id } = action.payload;\n    if (String(chain_id).startsWith(\"0x\") && IsHex(chain_id))\n      chain_id = parseInt(chain_id, 16);\n    if (chain_id === RUNNING_CHAIN) store.dispatch(actions.NetworkValid());\n    else store.dispatch(actions.NetworkInValid());\n  }\n\n  next(action);\n};\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/common/FunctionCard.js",["127"],"import { Card, Container } from \"react-bootstrap\";\n\nimport { DynamicForm } from \"../RenderCustomView\";\n\nconst FunctionCard = ({\n  title,\n  inputs,\n  stateMutability,\n  setModalContent,\n}) => {\n  return (\n    <Card className=\"custom-card-2\">\n      <Card.Title>\n        <div className=\"title\">\n          {title}\n          <div className=\"title--bottom\"></div>\n        </div>\n      </Card.Title>\n      <Card.Body>\n        <DynamicForm\n          data={inputs}\n          method={title}\n          stateMutability={stateMutability}\n          setModalContent={setModalContent}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FunctionCard;\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/common/DataCard.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/modal/BalanceModal.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/common/GeneralModal.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Navigation.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Boardroom.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Bonds.js",["128","129"],"import React, { Component } from \"react\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport Switch from \"react-switch\";\nimport { connect } from \"react-redux\";\n\nimport { SwitchStyle2 } from \"./Switch\";\nimport FunctionCard from \"./common/FunctionCard\";\nimport DataCard from \"./common/DataCard\";\n\nimport {\n  GetFunctionSignature,\n  GetFunctionSignatureAll,\n  GetRewardFunc,\n} from \"../helpers/AbiParser\";\nimport TreasureyAbi from \"../abi/treasurey.json\";\nimport { CONTRACT_ADDRESS } from \"../helpers/constant\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAllFunction: false,\n      walletConnected: false,\n      showApprove: false,\n      showModal: false,\n      modalContent: \"\",\n    };\n\n    this.setModalContent = this.setModalContent.bind(this);\n    this.setShowModal = this.setShowModal.bind(this);\n  }\n\n  setShowModal() {\n    this.setState({ showModal: true });\n  }\n\n  setModalContent(modalContent) {\n    this.setState({ modalContent, showModal: true });\n  }\n\n  renderAllFunc() {\n    const cards = [...GetFunctionSignatureAll(TreasureyAbi)];\n    return cards.map(({ name, inputs = [], stateMutability }, i) => (\n      <Col key={i + 1} lg={6} md={6} sm={6}>\n        <FunctionCard\n          title={name}\n          inputs={inputs.map((e) => {\n            if (_.isEmpty(e.name)) {\n              e.name = e.type;\n            }\n            return { name: e.name, type: \"text\" };\n          })}\n          stateMutability={stateMutability}\n          setModalContent={this.setModalContent}\n        />\n      </Col>\n    ));\n  }\n\n  renderBuyBonds() {\n    const cards = TreasureyAbi.filter(\n      ({ type, name }) => type === \"function\" && name === \"buyBonds\"\n    );\n\n    if (this.props.dashboard.cashAllowance === 0 || this.state.showApprove) {\n      cards.splice(0, 0, {\n        inputs: [\n          {\n            internalType: \"address\",\n            name: \"spender\",\n            type: \"address\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"amount\",\n            type: \"uint256\",\n          },\n        ],\n        name: \"approve\",\n        outputs: [\n          {\n            internalType: \"bool\",\n            name: \"\",\n            type: \"bool\",\n          },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n      });\n    }\n\n    return cards.map(({ name, inputs = [], stateMutability }, i) => {\n      if (name === \"approve\") {\n        return (\n          <FunctionCard\n            title={name}\n            key={i + 1}\n            inputs={inputs.map((e) => {\n              if (_.isEmpty(e.name)) {\n                e.name = e.type;\n              }\n              const q = { name: e.name, type: \"text\" };\n              if (e.name === \"spender\") {\n                q.disabled = true;\n                q.value = CONTRACT_ADDRESS.treasury;\n              }\n              return { ...q };\n            })}\n            stateMutability={stateMutability}\n            setShowModal={this.setShowModal}\n            setModalContent={this.setModalContent}\n          />\n        );\n      } else\n        return (\n          <FunctionCard\n            title={name}\n            key={i + 1}\n            inputs={inputs.map((e) => {\n              if (_.isEmpty(e.name)) {\n                e.name = e.type;\n              }\n              return { name: e.name, type: \"text\" };\n            })}\n            stateMutability={stateMutability}\n            setShowModal={this.setShowModal}\n            setModalContent={this.setModalContent}\n          />\n        );\n    });\n  }\n\n  renderRedeemBonds() {\n    const cards = TreasureyAbi.filter(\n      ({ type, name }) => type === \"function\" && name === \"redeemBonds\"\n    );\n    return cards.map(({ name, inputs = [], stateMutability }, i) => (\n      <FunctionCard\n        title={name}\n        key={i + 1}\n        inputs={inputs.map((e) => {\n          if (_.isEmpty(e.name)) {\n            e.name = e.type;\n          }\n          return { name: e.name, type: \"text\" };\n        })}\n        stateMutability={stateMutability}\n        setShowModal={this.setShowModal}\n        setModalContent={this.setModalContent}\n      />\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"main-panel dashboard\">\n        <Container>\n          <Row>\n            <Col lg={12} sm={12} md={12} className=\"boardroom__banner\">\n              BONDS\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={3} sm={3} md={3} className=\"staked-share\"></Col>\n\n            <Col lg={3} sm={3} md={3} className=\"staked-share\">\n              <DataCard title=\"Dollar Price\">\n                <div className=\"staked-share--amount\">\n                  {this.props.dashboard.dollarPrice}\n                </div>\n              </DataCard>\n            </Col>\n            <Col lg={3} sm={3} md={3} className=\"staked-share-usd\">\n              <DataCard title=\"Bonds Balance\">\n                <div className=\"staked-share-usd--amount\">\n                  {this.props.dashboard.bond}\n                </div>\n              </DataCard>\n            </Col>\n\n            <Col lg={3} sm={3} md={3} className=\"staked-share\"></Col>\n          </Row>\n\n          <Row>\n            <Col lg={6} sm={6} md={6}>\n              <div className=\"claim-reward\">\n                <Row>\n                  <Col className=\"claim-reward--title\" lg={12} sm={12} md={12}>\n                    Redeem Bonds\n                  </Col>\n\n                  {/* <Col\n                    lg={12}\n                    sm={12}\n                    md={12}\n                    className=\"stake-func--approved-amount\"\n                  >\n                    Earned: {this.props.dashboard.earned} Cash\n                  </Col> */}\n                </Row>\n\n                <Row>\n                  <Col>{this.renderRedeemBonds()}</Col>\n                </Row>\n              </div>\n            </Col>\n\n            <Col lg={6} sm={6} md={6}>\n              <div className=\"stake-func\">\n                <Row>\n                  <Col className=\"stake-func--title\" lg={12} sm={12} md={12}>\n                    Buy Bonds\n                  </Col>\n\n                  <Col\n                    lg={12}\n                    sm={12}\n                    md={12}\n                    className=\"stake-func--approved-amount\"\n                  >\n                    Appoved Amount: {this.props.dashboard.bondCashAllowance} Cash\n                  </Col>\n\n                  <Col\n                    lg={12}\n                    sm={12}\n                    md={12}\n                    className=\"stake-func--approved-amount\"\n                  >\n                    <Switch\n                      className=\"act-btn\"\n                      {...SwitchStyle2}\n                      onChange={(showApprove) => this.setState({ showApprove })}\n                      checked={this.state.showApprove}\n                    />\n                    Show Approve:&nbsp;&nbsp;\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>{this.renderBuyBonds()}</Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n\n          <br />\n\n          {/* <Row>\n            <Col lg={12} sm={12} md={12} className=\"show-all-func\">\n              <Switch\n                className=\"act-btn\"\n                {...SwitchStyle2}\n                onChange={(showAllFunction) =>\n                  this.setState({ showAllFunction })\n                }\n                checked={this.state.showAllFunction}\n              />\n              Show Contract Interface:&nbsp;&nbsp;&nbsp;\n            </Col>\n          </Row> */}\n\n          <br />\n\n          <Row>{this.state.showAllFunction ? this.renderAllFunc() : \"\"}</Row>\n        </Container>\n\n        <Modal\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>MEDICI</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.state.modalContent}</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.setState({ showModal: false })}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet, dashboard }) {\n  return { wallet, dashboard };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":9},{"ruleId":"138","severity":1,"message":"139","line":11,"column":19,"nodeType":"140","messageId":"141","endLine":11,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":21,"column":30,"nodeType":"144","messageId":"145","endLine":21,"endColumn":31,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"147","line":5,"column":31,"nodeType":"136","messageId":"137","endLine":5,"endColumn":40},{"ruleId":"134","severity":1,"message":"148","line":5,"column":42,"nodeType":"136","messageId":"137","endLine":5,"endColumn":45},{"ruleId":"134","severity":1,"message":"135","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":9},{"ruleId":"134","severity":1,"message":"149","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":13},{"ruleId":"134","severity":1,"message":"150","line":25,"column":9,"nodeType":"136","messageId":"137","endLine":25,"endColumn":17},{"ruleId":"134","severity":1,"message":"151","line":34,"column":9,"nodeType":"136","messageId":"137","endLine":34,"endColumn":20},{"ruleId":"134","severity":1,"message":"152","line":8,"column":7,"nodeType":"136","messageId":"137","endLine":8,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":164,"column":27,"nodeType":"155","endLine":167,"endColumn":28},{"ruleId":"134","severity":1,"message":"156","line":216,"column":10,"nodeType":"136","messageId":"137","endLine":216,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":9},{"ruleId":"134","severity":1,"message":"147","line":1,"column":16,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"157","line":12,"column":3,"nodeType":"136","messageId":"137","endLine":12,"endColumn":23},{"ruleId":"134","severity":1,"message":"158","line":14,"column":3,"nodeType":"136","messageId":"137","endLine":14,"endColumn":16},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["161","162"],"'Container' is defined but never used.","'Row' is defined but never used.","'cover' is defined but never used.","'provider' is assigned a value but never used.","'isConnected' is assigned a value but never used.","'RenderInput' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'loading' is assigned a value but never used.","'GetFunctionSignature' is defined but never used.","'GetRewardFunc' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"163","fix":"164","desc":"165"},{"messageId":"166","fix":"167","desc":"168"},"removeEscape",{"range":"169","text":"170"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"171","text":"172"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[571,572],"",[571,571],"\\"]