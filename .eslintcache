[{"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/index.js":"1","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/reportWebVitals.js":"2","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/App.js":"3","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/constant.js":"4","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Header.js":"5","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Dashboard.js":"6","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/wallets/metamask.js":"7","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/AbiParser.js":"8","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/RenderCustomView.js":"9","/home/rudresh/Workspace/dapps/gcv/src/index.js":"10","/home/rudresh/Workspace/dapps/gcv/src/App.js":"11","/home/rudresh/Workspace/dapps/gcv/src/reportWebVitals.js":"12","/home/rudresh/Workspace/dapps/gcv/src/redux/store.js":"13","/home/rudresh/Workspace/dapps/gcv/src/helpers/constant.js":"14","/home/rudresh/Workspace/dapps/gcv/src/cacheBuster.js":"15","/home/rudresh/Workspace/dapps/gcv/src/actions/index.js":"16","/home/rudresh/Workspace/dapps/gcv/src/components/Header.js":"17","/home/rudresh/Workspace/dapps/gcv/src/wallets/metamask.js":"18","/home/rudresh/Workspace/dapps/gcv/src/middleware/networkValidator.js":"19","/home/rudresh/Workspace/dapps/gcv/src/redux/reducers/index.js":"20","/home/rudresh/Workspace/dapps/gcv/src/actions/types.js":"21","/home/rudresh/Workspace/dapps/gcv/src/components/common/FunctionCard.js":"22","/home/rudresh/Workspace/dapps/gcv/src/components/common/AbiInput.js":"23","/home/rudresh/Workspace/dapps/gcv/src/components/common/AccordionWindow.js":"24","/home/rudresh/Workspace/dapps/gcv/src/components/common/BalanceModal.js":"25","/home/rudresh/Workspace/dapps/gcv/src/redux/reducers/Wallet.js":"26","/home/rudresh/Workspace/dapps/gcv/src/redux/reducers/WalletBalance.js":"27","/home/rudresh/Workspace/dapps/gcv/src/components/common/GeneralModal.js":"28","/home/rudresh/Workspace/dapps/gcv/src/components/common/RenderCustomView.js":"29","/home/rudresh/Workspace/dapps/gcv/src/components/common/ObjectComponent.js":"30","/home/rudresh/Workspace/dapps/gcv/src/components/wallet-connect/walletConnect.js":"31","/home/rudresh/Workspace/dapps/gcv/src/wallets/xinpay.js":"32","/home/rudresh/Workspace/dapps/gcv/src/components/GCV/index.js":"33","/home/rudresh/Workspace/dapps/gcv/src/components/common/Navigation.js":"34","/home/rudresh/Workspace/dapps/gcv/src/wallets/index.js":"35","/home/rudresh/Workspace/dapps/gcv/src/components/GCV/PastEvents.js":"36"},{"size":634,"mtime":1615203247231,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1615202677306,"results":"39","hashOfConfig":"38"},{"size":825,"mtime":1615215971139,"results":"40","hashOfConfig":"38"},{"size":28,"mtime":1615203236804,"results":"41","hashOfConfig":"38"},{"size":460,"mtime":1615203058186,"results":"42","hashOfConfig":"38"},{"size":1022,"mtime":1615220862016,"results":"43","hashOfConfig":"38"},{"size":2059,"mtime":1615221033679,"results":"44","hashOfConfig":"38"},{"size":106,"mtime":1615207095338,"results":"45","hashOfConfig":"38"},{"size":4734,"mtime":1615223539565,"results":"46","hashOfConfig":"38"},{"size":762,"mtime":1617533783956,"results":"47","hashOfConfig":"48"},{"size":1332,"mtime":1618683502730,"results":"49","hashOfConfig":"48"},{"size":362,"mtime":1617014495516,"results":"50","hashOfConfig":"48"},{"size":564,"mtime":1617525866123,"results":"51","hashOfConfig":"48"},{"size":2815,"mtime":1622364545836,"results":"52","hashOfConfig":"48"},{"size":2190,"mtime":1617018530572,"results":"53","hashOfConfig":"48"},{"size":996,"mtime":1619198500441,"results":"54","hashOfConfig":"48"},{"size":1908,"mtime":1619261813774,"results":"55","hashOfConfig":"48"},{"size":4817,"mtime":1619200037521,"results":"56","hashOfConfig":"48"},{"size":888,"mtime":1619198633868,"results":"57","hashOfConfig":"48"},{"size":167,"mtime":1617021495884,"results":"58","hashOfConfig":"48"},{"size":484,"mtime":1618253669984,"results":"59","hashOfConfig":"48"},{"size":970,"mtime":1618682023435,"results":"60","hashOfConfig":"48"},{"size":1070,"mtime":1617539335738,"results":"61","hashOfConfig":"48"},{"size":1375,"mtime":1617529937825,"results":"62","hashOfConfig":"48"},{"size":784,"mtime":1617534208370,"results":"63","hashOfConfig":"48"},{"size":1429,"mtime":1622362878287,"results":"64","hashOfConfig":"48"},{"size":321,"mtime":1617021431864,"results":"65","hashOfConfig":"48"},{"size":1453,"mtime":1617014979188,"results":"66","hashOfConfig":"48"},{"size":8686,"mtime":1619198098539,"results":"67","hashOfConfig":"48"},{"size":981,"mtime":1617529966025,"results":"68","hashOfConfig":"48"},{"size":2662,"mtime":1618328405966,"results":"69","hashOfConfig":"48"},{"size":4795,"mtime":1619199975745,"results":"70","hashOfConfig":"48"},{"size":5231,"mtime":1619262011476,"results":"71","hashOfConfig":"48"},{"size":800,"mtime":1619195609178,"results":"72","hashOfConfig":"48"},{"size":1043,"mtime":1619200086993,"results":"73","hashOfConfig":"48"},{"size":2290,"mtime":1622363089861,"results":"74","hashOfConfig":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1juvphs",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"bz0x7v",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"97"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"160"},"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/index.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/reportWebVitals.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/App.js",["161"],"import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nimport Header from \"./components/Header\";\nimport Dashboard from \"./components/Dashboard\";\n\nimport \"./assets/scss/main.scss\";\nimport {\n  GetCurrentProvider,\n  Connect,\n  SubmitContractTx,\n} from \"./wallets/metamask\";\n\nclass App extends Component {\n  componentDidMount() {\n    const provider = GetCurrentProvider();\n    if (!_.isEqual(\"metamask\", provider)) {\n      alert(\"please install / login into metamask\");\n    } else {\n      Connect();\n      // SubmitContractTx();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route path=\"/\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\nexport default App;\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/constant.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Header.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/Dashboard.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/wallets/metamask.js",["162","163"],"import Web3 from \"web3\";\n\nimport BoardroomAbi from \"../abi/boardroom.json\";\n\nlet addresses;\n\nexport function isWeb3Supported() {\n  return Boolean(window.web3 || window.ethereum);\n}\n\nexport async function initWeb3() {\n  const isWeb3Supported = isWeb3Supported();\n  if (!isWeb3Supported) return;\n\n  window.web3 = new Web3(window.web3.currentProvider);\n}\n\nexport async function Connect() {\n  if (!window.ethereum) {\n    window.web3 = new Web3(window.web3.currentProvider);\n    return window.web3;\n  }\n\n  addresses = await window.ethereum.enable().catch((error) => {\n    if (error == \"User rejected provider access\")\n      alert(\"Need Metamask for functional site\");\n    // throw new Error(\"WEB3_CONNECT_FAILED_USER_REJECTED_PROVIDER_ACCESS\");\n  });\n  return addresses;\n}\n\nexport function GetCurrentProvider() {\n  if (isWeb3Supported() !== true) return null;\n\n  if (window.web3.currentProvider.isMetaMask) return \"metamask\";\n\n  if (window.web3.currentProvider.isTrust) return \"trust\";\n\n  if (window.web3.currentProvider.isStatus) return \"status\";\n\n  if (typeof window.SOFA !== \"undefined\") return \"coinbase\";\n\n  if (typeof window.__CIPHER__ !== \"undefined\") return \"cipher\";\n\n  if (window.web3.currentProvider.constructor.name === \"EthereumProvider\")\n    return \"mist\";\n\n  if (window.web3.currentProvider.constructor.name === \"Web3FrameProvider\")\n    return \"parity\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"infura\") !== -1\n  )\n    return \"infura\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"localhost\") !== -1\n  )\n    return \"localhost\";\n\n  return \"unknown\";\n}\n\nexport async function SubmitContractTx(method, ...params) {\n  const boardRoomAddress = \"0x8ad9662F33EA75e6AbB581DE62EEC52b43436C64\";\n  const abi = BoardroomAbi;\n\n  const web3 = new Web3(window.web3.currentProvider);\n\n  const contract = new web3.eth.Contract(abi, boardRoomAddress);\n\n  const resp = await contract.methods[method](...params).call({\n    from: addresses[0],\n  });\n\n  return resp;\n}\n","/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/helpers/AbiParser.js",[],"/home/rudresh/Workspace/GeneralContractViewer/general-contract-viewer/src/components/RenderCustomView.js",["164","165"],"/home/rudresh/Workspace/dapps/gcv/src/index.js",[],["166","167"],"/home/rudresh/Workspace/dapps/gcv/src/App.js",["168"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\n\nimport * as actions from \"./actions/index\";\n\nimport Header from \"./components/Header\";\n\nimport CacheBuster from \"./cacheBuster\";\nimport packageJson from \"../package.json\";\n\n\nimport \"./assets/scss/main.scss\";\nimport { initWeb3 } from \"./wallets/metamask\";\n\nimport GenContractInteractor from \"./components/GCV\";\n\n\n\n\nclass App extends Component {\n  componentDidMount() {\n    // initWeb3();\n  }\n\n  render() {\n    // const active = window.location.pathname;\n\n    // const links = [\n    //   { link: \"/\", name: \"home\" },\n    //   { link: \"/single-matka\", name: \"Single Matka\" },\n    // ];\n\n    return (\n      <div className=\"App\">\n        <CacheBuster>\n          {({ loading, isLatestVersion, refreshCacheAndReload }) => {\n            // console.log(\"[*] cache policy\", loading, isLatestVersion);\n            if (loading) return null;\n            console.log(`UI Version:`, packageJson.version);\n            if (!loading && !isLatestVersion) {\n              // You can decide how and when you want to force reload\n              refreshCacheAndReload();\n            }\n\n            return null;\n          }}\n        </CacheBuster>\n\n        <Header />\n\n        <GenContractInteractor />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","/home/rudresh/Workspace/dapps/gcv/src/reportWebVitals.js",[],"/home/rudresh/Workspace/dapps/gcv/src/redux/store.js",[],"/home/rudresh/Workspace/dapps/gcv/src/helpers/constant.js",["169"],"/home/rudresh/Workspace/dapps/gcv/src/cacheBuster.js",[],"/home/rudresh/Workspace/dapps/gcv/src/actions/index.js",[],"/home/rudresh/Workspace/dapps/gcv/src/components/Header.js",["170","171","172","173"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { Navbar, Button, Col } from \"react-bootstrap\";\n\nimport BalanceModal from \"./common/BalanceModal\";\nimport { PROJECT_NAME } from \"../helpers/constant\";\nimport { initWeb3 } from \"../wallets/metamask\";\nimport WalletConnect from \"./wallet-connect/walletConnect\";\n\nimport GCVLogo from \"../assets/img/brand/header-logo.png\";\n\nclass Header extends React.Component {\n  renderCurrentAddressBox() {\n    if (this.props.wallet.connected === false) return \"Not Connected\";\n\n    if (!this.props.balance) return \"Loading\";\n\n    const balances = [\"native\", \"token\"];\n\n    const resp = Object.keys(this.props.balance).reduce((acc, curr) => {\n      if (balances.includes(curr)) {\n        acc.push({ name: curr, balance: this.props.balance[curr] });\n      }\n      return acc;\n    }, []);\n\n    return (\n      <>\n        <Col lg={12} sm={12} md={12}>\n          <BalanceModal data={[...resp]} />\n        </Col>\n      </>\n    );\n  }\n\n  getWalletBtn() {\n    let btnName = \"CONNECT\",\n      disabled = false;\n\n    if (this.props.wallet.connected && this.props.wallet.valid_network) {\n      btnName = \"WALLET CONNECTED\";\n      disabled = true;\n    } else if (\n      this.props.wallet.connected &&\n      !this.props.wallet.valid_network\n    ) {\n      btnName = \"INCORRECT NETWORK\";\n      disabled = true;\n    }\n    return (\n      <div className=\"ml-auto\">\n        <WalletConnect disabled={disabled} btnName={btnName} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Navbar className=\"custom-header\" bg=\"light\" expand=\"lg\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          <img src={GCVLogo} />\n        </Link>\n\n        {this.getWalletBtn()}\n      </Navbar>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet, balance }) {\n  return { wallet, balance };\n}\n\nexport default connect(mapStateToProps)(Header);\n","/home/rudresh/Workspace/dapps/gcv/src/wallets/metamask.js",["174","175"],"import Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport {\n  CONTRACT_ABI,\n  CONTRACT_ADDRESS,\n  AddMultiplier,\n} from \"../helpers/constant\";\n\nimport * as actions from \"../actions\";\nimport store from \"../redux/store\";\n\nlet addresses, web3;\n\nexport function IsWeb3Supported() {\n  return Boolean(window.ethereum);\n}\n\nexport async function GetProvider() {\n  const provider = await detectEthereumProvider();\n  return provider;\n}\n\nexport async function GetChainId() {\n  return await web3.eth.net.getId();\n}\n\nexport async function initWeb3() {\n  try {\n    const isWeb3Supported = IsWeb3Supported();\n    if (!isWeb3Supported) return store.dispatch(actions.WalletDisconnected());\n    if (GetCurrentProvider() !== \"metamask\")\n      return store.dispatch(actions.WalletDisconnected());\n    // const isConnected = await window.ethereum.isConnected();\n    await window.ethereum.enable();\n    _initListerner();\n    web3 = new Web3(await GetProvider());\n    const accounts = await web3.eth.getAccounts();\n    addresses = accounts;\n    const chain_id = await web3.eth.getChainId();\n    return store.dispatch(\n      actions.WalletConnected({ address: accounts[0], chain_id })\n    );\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function _initListerner() {\n  window.ethereum.removeAllListeners();\n\n  window.ethereum.on(\"accountsChanged\", async (data) => {\n    const accounts = await web3.eth.getAccounts();\n    addresses = accounts;\n    store.dispatch(actions.AccountChanged(accounts[0]));\n  });\n\n  window.ethereum.on(\"chainChanged\", async (data) => {\n    const chain_id = await web3.eth.getChainId();\n    store.dispatch(actions.NetworkChanged(chain_id));\n  });\n\n  window.ethereum.on(\"connect\", async (data) => {\n    web3 = new Web3(await GetProvider());\n    const accounts = await web3.eth.getAccounts();\n    const chain_id = await web3.eth.getChainId();\n    addresses = accounts;\n    return store.dispatch(\n      actions.WalletConnected({ address: accounts[0], chain_id })\n    );\n  });\n\n  window.ethereum.on(\"disconnect\", (data) => {\n    console.log(\"disconnect\", data);\n    return store.dispatch(actions.WalletDisconnected());\n  });\n\n  window.ethereum.on(\"message\", (data) => {\n    console.log(\"message\", data);\n  });\n}\n\nexport function GetCurrentProvider() {\n  if (IsWeb3Supported() !== true) return null;\n\n  if (window.web3.currentProvider.isMetaMask) return \"metamask\";\n\n  if (window.web3.currentProvider.isTrust) return \"trust\";\n\n  if (window.web3.currentProvider.isStatus) return \"status\";\n\n  if (typeof window.SOFA !== \"undefined\") return \"coinbase\";\n\n  if (typeof window.__CIPHER__ !== \"undefined\") return \"cipher\";\n\n  if (window.web3.currentProvider.constructor.name === \"EthereumProvider\")\n    return \"mist\";\n\n  if (window.web3.currentProvider.constructor.name === \"Web3FrameProvider\")\n    return \"parity\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"infura\") !== -1\n  )\n    return \"infura\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"localhost\") !== -1\n  )\n    return \"localhost\";\n\n  return \"unknown\";\n}\n\nexport const GetNativeBalance = async (address) => {\n  const web3 = new Web3(await GetProvider());\n  return web3.eth.getBalance(address);\n};\n\nexport async function SubmitContractTxGeneral(\n  method,\n  type,\n  stateMutability,\n  abi,\n  address,\n  ...params\n) {\n  try {\n    const web3 = new Web3(await GetProvider());\n\n    // const { address, abi } = getContractAddress(type);\n\n    const contract = new web3.eth.Contract(abi, address);\n\n    if (stateMutability === \"view\") {\n      const resp = await contract.methods[method](...params).call();\n\n      return resp;\n    } else {\n      const gasLimit = await contract.methods[method](...params).estimateGas({\n        from: addresses[0],\n      });\n      const resp = await contract.methods[method](...params).send({\n        from: addresses[0],\n        gas: gasLimit,\n      });\n\n      return resp;\n    }\n  } catch (e) {\n    console.log(\"resp\", IsJsonRpcError(e));\n    console.log(\"resp\", e);\n    throw e;\n  }\n}\n\nexport const GetPastEvents = async (abi, address) => {\n  const web3 = new Web3(await GetProvider());\n  const contract = new web3.eth.Contract(abi, address);\n  return await contract.getPastEvents(\n    \"allEvents\",\n    {\n      fromBlock: 0,\n      toBlock: \"latest\",\n    },\n    function (error, events) {\n      console.log(\"eventsevents\",events);\n    }\n  );\n};\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nexport const GetJsonRpcError = (err) => {\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\n};\n\nfunction getContractAddress(type) {\n  return {\n    address: CONTRACT_ADDRESS[type],\n    abi: CONTRACT_ABI[type],\n  };\n}\n","/home/rudresh/Workspace/dapps/gcv/src/middleware/networkValidator.js",[],"/home/rudresh/Workspace/dapps/gcv/src/redux/reducers/index.js",[],"/home/rudresh/Workspace/dapps/gcv/src/actions/types.js",[],"/home/rudresh/Workspace/dapps/gcv/src/components/common/FunctionCard.js",["176"],"import { Card, Container } from \"react-bootstrap\";\n\nimport { DynamicForm } from \"./RenderCustomView\";\n\nconst FunctionCard = ({\n  title,\n  inputs,\n  stateMutability,\n  setModalContent,\n  contractType = \"token\",\n  abi, \n  address\n}) => {\n  const mutabilityClass = `title__state-mutability ${stateMutability}`;\n  return (\n    <Card className=\"custom-card-2\">\n      <Card.Title>\n        <div className=\"title\">\n          <span className=\"title__function-name\">{title}</span>\n          <span className={mutabilityClass}>{stateMutability}</span>\n          <div className=\"title__bottom\"></div>\n        </div>\n      </Card.Title>\n      <Card.Body>\n        <DynamicForm\n          data={[...inputs]}\n          method={title}\n          contractType={contractType}\n          stateMutability={stateMutability}\n          setModalContent={setModalContent}\n          abi={abi}\n          address={address}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FunctionCard;\n","/home/rudresh/Workspace/dapps/gcv/src/components/common/AbiInput.js",["177"],"import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nfunction AbiInput({ abi = \"\", addr = \"\", setAbi, setAddress }) {\n  return (\n    <div className=\"abi-input\">\n      <Container>\n        <Row>\n          <Col lg={12} md={12} sm={12} className=\"field-name\">\n            ABI\n          </Col>\n          <Col lg={12} md={12} sm={12}>\n            <textarea\n              value\n              className=\"form-control abi-json\"\n              value={JSON.stringify(abi, null,\"\\t\")}\n              onChange={(e) => setAbi(e.target.value)}\n              spellcheck=\"false\"\n            />\n          </Col>\n        </Row>\n        <Row>\n        <Col lg={12} md={12} sm={12} className=\"field-name\">\n            Contract Addresss\n          </Col>\n          <Col lg={12} md={12} sm={12}>\n            <input\n              className=\"form-control contract-address\"\n              value={addr}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default AbiInput;\n","/home/rudresh/Workspace/dapps/gcv/src/components/common/AccordionWindow.js",["178","179","180","181","182"],"import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nimport { Container, Row, Col, Card, Accordion } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronDown,\n  faCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass AccordionWindow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: props.defActive === true ? \"0\" : \"-1\",\n    };\n  }\n\n  renderSymbol() {\n    return this.state.active === \"0\" ? faChevronDown : faChevronRight;\n  }\n\n  render() {\n    return (\n      <Accordion className=\"liquidator-config\" activeKey={this.state.active}>\n        <Card>\n          <Accordion.Toggle\n            as={Card.Header}\n            eventKey=\"0\"\n            onClick={() =>\n              this.setState({ active: this.state.active === \"0\" ? \"-1\" : \"0\" })\n            }\n          >\n            <span>{this.props.title}</span>\n            <span className=\"u-float-r\">\n              <FontAwesomeIcon icon={this.renderSymbol()} />\n            </span>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body className={this.props.childClass}>\n              {this.props.children}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n}\n\nexport default AccordionWindow;\n","/home/rudresh/Workspace/dapps/gcv/src/components/common/BalanceModal.js",[],"/home/rudresh/Workspace/dapps/gcv/src/redux/reducers/Wallet.js",[],"/home/rudresh/Workspace/dapps/gcv/src/redux/reducers/WalletBalance.js",[],"/home/rudresh/Workspace/dapps/gcv/src/components/common/GeneralModal.js",[],"/home/rudresh/Workspace/dapps/gcv/src/components/common/RenderCustomView.js",["183","184","185","186"],"import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nimport {\n  GetJsonRpcError,\n  IsJsonRpcError,\n  SubmitContractTxGeneral,\n} from \"../../wallets\";\nimport { EXPLORER } from \"../../helpers/constant\";\nimport { GeneralObjectViewer } from \"./ObjectComponent\";\n\nconst RenderInput = ({ field, ...inputProps }) => (\n  <Row>\n    <Col lg={4} md={4} sm={12}>\n      <label className=\"form-control\">{field}</label>\n    </Col>\n    <Col lg={8} md={8} sm={12}>\n      <input className=\"form-control\" {...inputProps} />\n    </Col>\n  </Row>\n);\n/**\n *\n * !FIX: DOB & File input types\n */\nexport const RenderInputCustomType = ({\n  field,\n  onChange: cb,\n  type = \"text\",\n  value,\n  setInput,\n  onBlur = () => {},\n  formData,\n  setFormData,\n  ...inputProps\n}) => {\n  let customInput = null;\n  switch (type) {\n    case \"text\":\n    case \"number\":\n      customInput = (\n        <input\n          type={type}\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n          onBlur={(e) => onBlur(e, { setInput, formData, setFormData })}\n          {...inputProps}\n        />\n      );\n      break;\n    case \"select\":\n      customInput = (\n        <select\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n        >\n          {inputProps.options.map(({ label, value: curVal }, i) => (\n            <option key={i + 1} value={curVal}>\n              {label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case \"radio\":\n      customInput = (\n        <>\n          {inputProps.options.map(({ value: curVal, label }, i) => (\n            <div className=\"input-dynamic-form__input-radio\" key={i + 1}>\n              <Form.Label>\n                <input\n                  type={type}\n                  value={curVal}\n                  name={field}\n                  key={i + 1}\n                  onClick={(e) => {\n                    cb(e.target.value);\n                  }}\n                  defaultChecked={curVal === value}\n                />\n                {label}\n              </Form.Label>\n            </div>\n          ))}\n        </>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return (\n    <Row>\n      <Col lg={4} md={4} sm={12}>\n        <label className=\"form-control\">{field}</label>\n      </Col>\n      <Col lg={8} md={8} sm={12}>\n        {customInput}\n      </Col>\n    </Row>\n  );\n};\n\nexport const RenderInputCustomType2 = ({\n  field,\n  onChange: cb,\n  type = \"text\",\n  value,\n  setInput,\n  onBlur = () => {},\n  formData,\n  setFormData,\n  ...inputProps\n}) => {\n  let customInput = null;\n  switch (type) {\n    case \"text\":\n    case \"number\":\n      customInput = (\n        <input\n          type={type}\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n          onBlur={(e) => onBlur(e, { setInput, formData, setFormData })}\n          {...inputProps}\n        />\n      );\n      break;\n    case \"select\":\n      customInput = (\n        <select\n          className=\"form-control\"\n          onChange={(e) => {\n            cb(e.target.value);\n          }}\n          value={value}\n        >\n          {inputProps.options.map(({ label, value: curVal }, i) => (\n            <option key={i + 1} value={curVal}>\n              {label}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    case \"radio\":\n      customInput = (\n        <>\n          {inputProps.options.map(({ value: curVal, label }, i) => (\n            <div className=\"input-dynamic-form__input-radio\" key={i + 1}>\n              <Form.Label>\n                <input\n                  type={type}\n                  value={curVal}\n                  name={field}\n                  key={i + 1}\n                  onClick={(e) => {\n                    cb(e.target.value);\n                  }}\n                  defaultChecked={curVal === value}\n                />\n                {label}\n              </Form.Label>\n            </div>\n          ))}\n        </>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return (\n    <Row>\n      <Col lg={12} md={12} sm={12}>\n        <label className=\"form-control field-label\">{field}</label>\n      </Col>\n      <Col className=\"field-input\" lg={12} md={12} sm={12}>\n        {customInput}\n      </Col>\n    </Row>\n  );\n};\n\n/**\n *\n * @param {*} props class properties\n */\nexport const DynamicForm = (props) => {\n  const [inputs, setInputs] = useState(\n    props.data.map(({ value = \"\", defaultValue = \"\" }) => {\n      if (value !== \"\") {\n        return value;\n      } else if (defaultValue !== \"\") {\n        return defaultValue;\n      }\n    })\n  );\n\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormDatas] = useState(props.data);\n\n  useEffect(() => {\n    setFormDatas(props.data);\n  }, [props.data]);\n\n  const setInput = (i, v) => setInputs(Object.assign([...inputs], { [i]: v }));\n  const setFormData = (i, v) =>\n    setFormDatas(Object.assign([...formData], { [i]: v }));\n\n  return (\n    <Container className=\"custom-input-1 dynamic-form\">\n      {formData.map(({ name, type, ...rest }, i) => (\n        <RenderInputCustomType2\n          field={name}\n          type={type}\n          value={inputs[i]}\n          key={i}\n          setInput={(i, e) => setInput(i, e)}\n          onChange={(e) => setInput(i, e)}\n          formData={formData}\n          setFormData={setFormData}\n          {...rest}\n        />\n      ))}\n      <Button\n        onClick={() => {\n          setLoading(true);\n          SubmitContractTxGeneral(\n            props.method,\n            props.contractType || \"token\",\n            props.stateMutability,\n            props.abi,\n            props.address,\n            ...inputs\n          )\n            .then((resp) => {\n              let respStr;\n              if (_.isObject(resp) === true)\n                respStr = GeneralObjectViewer(resp);\n              else respStr = `${resp}`;\n\n              if (resp && resp.transactionHash) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Transaction Hash</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>\n                          {/* <a\n                            target=\"_blank\"\n                            href={`${EXPLORER}/tx/${resp.transactionHash}`}\n                          >\n                            TX HASH\n                          </a> */}\n                        </span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else if (resp !== null) {\n                const content = (\n                  <Container>\n                    <Row>\n                      <Col lg={4} md={4} sm={4}>\n                        <span>Response</span>\n                      </Col>\n                      <Col lg={8} md={8} sm={8}>\n                        <span>{respStr}</span>\n                      </Col>\n                    </Row>\n                  </Container>\n                );\n                props.setModalContent(content);\n              } else {\n                props.setModalContent(\"error\");\n              }\n\n              setLoading(false);\n            })\n            .catch((e) => {\n              console.log(\"err\", e);\n              if (IsJsonRpcError(e)) {\n                const err = GetJsonRpcError(e);\n                props.setModalContent(`Error: ${err.message}`);\n                setLoading(false);\n                return;\n              }\n              alert(\"Error\");\n              setLoading(false);\n            });\n        }}\n        variant=\"primary\"\n        style={{ width: \"10rem\", float: \"right\" }}\n        disabled={loading}\n      >\n        Submit\n      </Button>\n    </Container>\n  );\n};\n\nexport const SelectOption = [{ label: \"Select\", value: null }];\n\nexport const DynamicActionBtn = (props) => {\n  const [loading, setLoading] = useState(false);\n  let customBtn = null;\n  switch (props.type) {\n    case \"actionBtn\":\n      customBtn = (\n        <Button\n          variant={props.options.variant}\n          onClick={() => {\n            setLoading(false);\n            // PostApi(props.api, \"\", () => setLoading(true));\n          }}\n        >\n          {\" \"}\n          {props.options.name}\n        </Button>\n      );\n      break;\n    default:\n      return <></>;\n  }\n  return customBtn;\n};\n","/home/rudresh/Workspace/dapps/gcv/src/components/common/ObjectComponent.js",[],"/home/rudresh/Workspace/dapps/gcv/src/components/wallet-connect/walletConnect.js",["187"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Modal, Button } from \"react-bootstrap\";\n\nimport { PROJECT_NAME } from \"../../helpers/constant\";\nimport { initWeb3 } from \"../../wallets/metamask\";\nimport { initXdc3 } from \"../../wallets/xinpay\";\n\nimport XinPayIcon from \"../../assets/img/wallets/xinpay.png\";\nimport MetamaskIcon from \"../../assets/img/wallets/metamask.webp\";\n\nconst WalletProviders = [\n  {\n    name: \"metamask\",\n    icon: MetamaskIcon,\n    provider: initWeb3,\n  },\n  {\n    name: \"xinpay\",\n    icon: XinPayIcon,\n    provider: initXdc3,\n  },\n];\n\nfunction RenderWalletProvider() {\n  return (\n    <Container>\n      <Row>\n        {WalletProviders.map(({ name, icon, provider }) => (\n          <Col sm={12}>\n            <Container>\n              <Row\n                onClick={() => {\n                  provider();\n                }}\n              >\n                <Col className=\"wallet-icon--wrapper\" sm={2} lg={2} md={2}>\n                  <div className=\"wallet-icon\">\n                    <img src={icon} />\n                  </div>\n                </Col>\n                <Col className=\"wallet-name-wrapper\" sm={10} lg={10} md={10}>\n                  <div className=\"wallet-name\">{name}</div>\n                </Col>\n              </Row>\n            </Container>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n}\n\nclass WalletConnect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      modalContent: RenderWalletProvider(),\n    };\n  }\n\n  render() {\n    const BTN_MSG = this.props.btnName || \"CONNECT\";\n    const disabled = this.props.disabled || false;\n\n    return (\n      <div className=\"wallet-connect\">\n        <Button\n          variant={\"primary\"}\n          onClick={() => this.setState({ showModal: true })}\n          disabled={disabled}\n        >\n          {BTN_MSG}\n        </Button>\n        <Modal\n          className=\"wallet-connect\"\n          show={this.state.showModal}\n          onHide={() => this.setState({ showModal: false })}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>{PROJECT_NAME}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{this.state.modalContent}</Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.setState({ showModal: false })}\n            >\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ wallet }) {\n  return { wallet };\n}\n\nexport default connect(mapStateToProps)(WalletConnect);\n","/home/rudresh/Workspace/dapps/gcv/src/wallets/xinpay.js",["188"],"import Xdc3 from \"xdc3\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nimport * as actions from \"../actions\";\nimport store from \"../redux/store\";\n\nlet addresses, xdc3;\n\nexport function IsXdc3Supported() {\n  return Boolean(window.ethereum);\n}\n\nexport async function GetProvider() {\n  const provider = await detectEthereumProvider();\n  return provider;\n}\n\nexport async function GetChainId() {\n  let xdc3 = new Xdc3(await GetProvider());\n  return await xdc3.eth.net.getId();\n}\n\nexport async function initXdc3() {\n  try {\n    const isXdc3Supported = IsXdc3Supported();\n    if (!isXdc3Supported) return store.dispatch(actions.WalletDisconnected());\n    if ((await GetCurrentProvider()) !== \"xinpay\")\n      return store.dispatch(actions.WalletDisconnected());\n    // const isConnected = await window.ethereum.isConnected();\n    await window.ethereum.enable();\n    _initListerner();\n    const provider = await GetProvider();\n    xdc3 = new Xdc3(provider);\n    const accounts = await xdc3.eth.getAccounts();\n    addresses = accounts;\n    const chain_id = await xdc3.eth.getChainId();\n    return store.dispatch(\n      actions.WalletConnected({ address: accounts[0], chain_id })\n    );\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport async function _initListerner() {\n  window.ethereum.removeAllListeners();\n\n  window.ethereum.on(\"accountsChanged\", async (data) => {\n    const accounts = await xdc3.eth.getAccounts();\n    addresses = accounts;\n    store.dispatch(actions.AccountChanged(accounts[0]));\n  });\n\n  window.ethereum.on(\"chainChanged\", async (data) => {\n    const chain_id = await xdc3.eth.getChainId();\n    store.dispatch(actions.NetworkChanged(chain_id));\n  });\n\n  window.ethereum.on(\"connect\", async (data) => {\n    xdc3 = new Xdc3(await GetProvider());\n    const accounts = await xdc3.eth.getAccounts();\n    const chain_id = await xdc3.eth.getChainId();\n    addresses = accounts;\n    return store.dispatch(\n      actions.WalletConnected({ address: accounts[0], chain_id })\n    );\n  });\n\n  window.ethereum.on(\"disconnect\", (data) => {\n    console.log(\"disconnect\", data);\n    return store.dispatch(actions.WalletDisconnected());\n  });\n\n  window.ethereum.on(\"message\", (data) => {\n    console.log(\"message\", data);\n  });\n}\n\nexport async function GetCurrentProvider() {\n  if (IsXdc3Supported() !== true) return null;\n\n  if (window.web3.currentProvider.isMetaMask) {\n    const chainId = await GetChainId();\n    console.log(\"chainId\", chainId, [50, 51].includes(chainId));\n    if ([50, 51].includes(chainId)) return \"xinpay\";\n    return \"metamask\";\n  }\n\n  if (window.web3.currentProvider.isTrust) return \"trust\";\n\n  if (window.web3.currentProvider.isStatus) return \"status\";\n\n  if (typeof window.SOFA !== \"undefined\") return \"coinbase\";\n\n  if (typeof window.__CIPHER__ !== \"undefined\") return \"cipher\";\n\n  if (window.web3.currentProvider.constructor.name === \"EthereumProvider\")\n    return \"mist\";\n\n  if (window.web3.currentProvider.constructor.name === \"Xdc3FrameProvider\")\n    return \"parity\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"infura\") !== -1\n  )\n    return \"infura\";\n\n  if (\n    window.web3.currentProvider.host &&\n    window.web3.currentProvider.host.indexOf(\"localhost\") !== -1\n  )\n    return \"localhost\";\n\n  return \"unknown\";\n}\n\nexport const GetNativeBalance = (address) => {\n  const xdc3 = new Xdc3(window.web3.currentProvider);\n  return xdc3.eth.getBalance(address);\n};\n\nexport async function SubmitContractTxGeneral(\n  method,\n  type,\n  stateMutability,\n  abi,\n  address,\n  ...params\n) {\n  try {\n    const xdc3 = new Xdc3(window.web3.currentProvider);\n\n    // const { address, abi } = getContractAddress(type);\n\n    const contract = new xdc3.eth.Contract(abi, address);\n\n    if (stateMutability === \"view\") {\n      const resp = await contract.methods[method](...params).call();\n\n      return resp;\n    } else {\n      const gasLimit = await contract.methods[method](...params).estimateGas({\n        from: addresses[0],\n      });\n      const resp = await contract.methods[method](...params).send({\n        from: addresses[0],\n        gas: gasLimit,\n      });\n\n      return resp;\n    }\n  } catch (e) {\n    console.log(\"resp\", IsJsonRpcError(e));\n    console.log(\"resp\", e);\n    throw e;\n  }\n}\n\nexport const IsJsonRpcError = (err) => {\n  return err.message.split(\"\\n\")[0] === \"Internal JSON-RPC error.\";\n};\n\nexport const GetPastEvents = async (abi, address) => {\n  const xdc3 = new Xdc3(await GetProvider());\n  const contract = new xdc3.eth.Contract(abi, address);\n  return await contract.getPastEvents(\"allEvents\", {\n    fromBlock: 0,\n    toBlock: \"latest\",\n  });\n};\n\nexport const GetJsonRpcError = (err) => {\n  return JSON.parse(err.message.split(\"\\n\").slice(1).join(\"\").trim());\n};\n","/home/rudresh/Workspace/dapps/gcv/src/components/GCV/index.js",[],"/home/rudresh/Workspace/dapps/gcv/src/components/common/Navigation.js",["189"],"import React, { useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst PageNavigation = ({ setactivePath, activePath, links }) => {\n  return (\n    <div className=\"page-navigation\">\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"page-navigation__wrapper\">\n              {links.map(({ name, link }) => (\n                <span\n                  className={\n                    link === activePath ? \"nav-link__ active\" : \"nav-link__\"\n                  }\n                  to={link}\n                  onClick={() => setactivePath(link)}\n                >\n                  {name}\n                </span>\n              ))}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default PageNavigation;\n","/home/rudresh/Workspace/dapps/gcv/src/wallets/index.js",[],"/home/rudresh/Workspace/dapps/gcv/src/components/GCV/PastEvents.js",["190"],"import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport { GetPastEvents } from \"../../wallets\";\n\nclass PastEvents extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n\n    this.loaded = false;\n  }\n\n  renderReturnValues(returnValues) {\n    return (\n      <Container>\n        {Object.keys(returnValues)\n          .filter((x) => isNaN(x))\n          .map((v, i) => (\n            <Row key={i} style={{ textAlign: \"left\" }}>\n              <Col lg={4}>{v}</Col>\n              <Col lg={8}>{returnValues[v]}</Col>\n            </Row>\n          ))}\n      </Container>\n    );\n  }\n\n  componentDidMount() {\n    this.getEvents();\n  }\n\n  componentDidUpdate() {\n    if ((this.loaded = false)) {\n      this.getEvents();\n    }\n  }\n\n  getEvents() {\n    if (this.props.wallet.connected && this.props.wallet.valid_network)\n      GetPastEvents(this.props.abi, this.props.address).then((x) => {\n        this.setState({ data: x });\n        this.loaded = true;\n      });\n  }\n\n  renderEvents() {\n    return (\n      <Container className=\"past-events\">\n        <Row className=\"header\" key={0}>\n          <Col lg={3}>TX HASH</Col>\n          <Col lg={3}>EVENT NAME</Col>\n          <Col lg={6}>RETURN VALUES</Col>\n        </Row>\n        {this.state.data\n          .sort(({ blockNumber: a }, { blockNumber: b }) => b - a)\n          .map((v, i) => (\n            <Row className=\"event-row\" key={i + 1}>\n              <Col lg={3}>\n                <a\n                  target=\"_blank\"\n                  href={`${this.props.wallet.explorer}/tx/${v.transactionHash}`}\n                >\n                  HASH\n                </a>\n              </Col>\n              <Col lg={3}>{v.event}</Col>\n              <Col lg={6}>{this.renderReturnValues(v.returnValues)}</Col>\n            </Row>\n          ))}\n      </Container>\n    );\n  }\n\n  render() {\n    if (this.props.wallet.connected && this.props.wallet.valid_network) {\n      return (\n        <div style={{ color: \"white\", textAlign: \"center\" }}>\n          {this.renderEvents()}\n        </div>\n      );\n    } else\n      return (\n        <div style={{ color: \"white\", textAlign: \"center\" }}>\n          PLEASE CONNECT WALLET\n        </div>\n      );\n  }\n}\n\nexport default PastEvents;\n",{"ruleId":"191","severity":1,"message":"192","line":12,"column":3,"nodeType":"193","messageId":"194","endLine":12,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":12,"column":27,"nodeType":"193","messageId":"197","endLine":12,"endColumn":42},{"ruleId":"198","severity":1,"message":"199","line":25,"column":15,"nodeType":"200","messageId":"201","endLine":25,"endColumn":17},{"ruleId":"191","severity":1,"message":"202","line":7,"column":7,"nodeType":"193","messageId":"194","endLine":7,"endColumn":18},{"ruleId":"191","severity":1,"message":"203","line":173,"column":10,"nodeType":"193","messageId":"194","endLine":173,"endColumn":17},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"191","severity":1,"message":"208","line":14,"column":10,"nodeType":"193","messageId":"194","endLine":14,"endColumn":18},{"ruleId":"209","severity":1,"message":"210","line":19,"column":30,"nodeType":"211","messageId":"212","endLine":19,"endColumn":31,"suggestions":"213"},{"ruleId":"191","severity":1,"message":"214","line":5,"column":18,"nodeType":"193","messageId":"194","endLine":5,"endColumn":24},{"ruleId":"191","severity":1,"message":"215","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":22},{"ruleId":"191","severity":1,"message":"208","line":9,"column":10,"nodeType":"193","messageId":"194","endLine":9,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":63,"column":11,"nodeType":"218","endLine":63,"endColumn":32},{"ruleId":"191","severity":1,"message":"219","line":7,"column":3,"nodeType":"193","messageId":"194","endLine":7,"endColumn":16},{"ruleId":"191","severity":1,"message":"220","line":182,"column":10,"nodeType":"193","messageId":"194","endLine":182,"endColumn":28},{"ruleId":"191","severity":1,"message":"221","line":1,"column":16,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":16,"column":15,"nodeType":"224","messageId":"225","endLine":16,"endColumn":53},{"ruleId":"191","severity":1,"message":"226","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":9},{"ruleId":"191","severity":1,"message":"221","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":19},{"ruleId":"191","severity":1,"message":"227","line":4,"column":21,"nodeType":"193","messageId":"194","endLine":4,"endColumn":24},{"ruleId":"191","severity":1,"message":"228","line":4,"column":26,"nodeType":"193","messageId":"194","endLine":4,"endColumn":29},{"ruleId":"191","severity":1,"message":"229","line":9,"column":3,"nodeType":"193","messageId":"194","endLine":9,"endColumn":11},{"ruleId":"191","severity":1,"message":"230","line":10,"column":10,"nodeType":"193","messageId":"194","endLine":10,"endColumn":18},{"ruleId":"191","severity":1,"message":"202","line":13,"column":7,"nodeType":"193","messageId":"194","endLine":13,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":199,"column":56,"nodeType":"233","messageId":"234","endLine":199,"endColumn":58},{"ruleId":"191","severity":1,"message":"203","line":317,"column":10,"nodeType":"193","messageId":"194","endLine":317,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":39,"column":21,"nodeType":"218","endLine":39,"endColumn":39},{"ruleId":"191","severity":1,"message":"235","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":12},{"ruleId":"191","severity":1,"message":"236","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":63,"column":17,"nodeType":"218","messageId":"239","endLine":66,"endColumn":18,"fix":"240"},"no-unused-vars","'SubmitContractTx' is defined but never used.","Identifier","unusedVar","no-use-before-define","'isWeb3Supported' was used before it was defined.","usedBeforeDefined","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'RenderInput' is assigned a value but never used.","'loading' is assigned a value but never used.","no-native-reassign",["241"],"no-negated-in-lhs",["242"],"'initWeb3' is defined but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["243","244"],"'Button' is defined but never used.","'PROJECT_NAME' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AddMultiplier' is defined but never used.","'getContractAddress' is defined but never used.","'Container' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'_' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'faCircle' is defined but never used.","'EXPLORER' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Web3' is defined but never used.","'useState' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"245","text":"246"},"no-global-assign","no-unsafe-negation",{"messageId":"247","fix":"248","desc":"249"},{"messageId":"250","fix":"251","desc":"252"},[1628,1628]," rel=\"noreferrer\"","removeEscape",{"range":"253","text":"254"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"255","text":"256"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[434,435],"",[434,434],"\\"]